<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>martin-helmich.de</title>
    <description>Mein privater Blog zur Softwareentwicklung und -architektur, Cloud-Technologien und anderen spannenden Themen.
</description>
    <link>https://www.martin-helmich.de/</link>
    <atom:link href="https://www.martin-helmich.de/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 10 Jul 2021 12:27:15 +0000</pubDate>
    <lastBuildDate>Sat, 10 Jul 2021 12:27:15 +0000</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
    
      <item>
        <title>Event-Sourcing: Das steckt hinter dem Software-Kontenbuch</title>
        <description>&lt;p&gt;Wer Software nachträglich ohne großen Aufwand um zusätzliche Funktionen ­erweitern will, kann zu Microservices greifen. Oder sich am Architekturmuster von ­Event-Sourcing bedienen. So funktioniert das digitale Kontenbuch.&lt;/p&gt;
</description>
        <pubDate>Sun, 14 Feb 2021 19:00:00 +0000</pubDate>
        <link>https://www.martin-helmich.de/https:/t3n.de/magazin/event-sourcing-das-steckt-hinter-250347/</link>
        <guid isPermaLink="true">https://www.martin-helmich.de/https:/t3n.de/magazin/event-sourcing-das-steckt-hinter-250347/</guid>
        
        <category>event-sourcing</category>
        
        
      </item>
    
      <item>
        <title>Microservices: Mit Tools wie Jaeger die Übersicht behalten</title>
        <description>&lt;p&gt;In komplexen Microservice-Architekturen verliert selbst der Senior-Entwickler schnell die Übersicht. Um nachvollziehen zu können, welchen Weg eine einzelne ­Nutzeranfrage eigentlich nimmt und welche Services darin involviert sind, haben sich Tools wie Jaeger etabliert. So funktioniert das Werkzeug für „Distributed Tracing“.&lt;/p&gt;
</description>
        <pubDate>Sat, 04 Jul 2020 19:00:00 +0000</pubDate>
        <link>https://www.martin-helmich.de/https:/t3n.de/magazin/microservices-mit-tools-wie-die-249408/</link>
        <guid isPermaLink="true">https://www.martin-helmich.de/https:/t3n.de/magazin/microservices-mit-tools-wie-die-249408/</guid>
        
        <category>tracing</category>
        
        <category>golang</category>
        
        
      </item>
    
      <item>
        <title>Automatisierung mit Kubernetes Operators</title>
        <description>&lt;p&gt;In der Kubernetes-Sprache ist ein Operator ein Stück Software, das operatives Wissen (daher der Name) über Betrieb und Installation eines bestimmten Programms oder einer Systemkomponente seinerseits in Software abbildet und damit automatisieren kann. Dieser Artikel zeigt, wie ihr einen solchen Operator mithilfe des Operator SDKs selbst in Go programmieren könnt.&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Feb 2020 19:00:00 +0000</pubDate>
        <link>https://www.martin-helmich.de/https:/jaxenter.de/kubernetes/automatisierung-kubernetes-operators-88189</link>
        <guid isPermaLink="true">https://www.martin-helmich.de/https:/jaxenter.de/kubernetes/automatisierung-kubernetes-operators-88189</guid>
        
        <category>kubernetes</category>
        
        <category>docker</category>
        
        <category>golang</category>
        
        
      </item>
    
      <item>
        <title>Besser entwickeln mit Devops-Praktiken: Continuous Delivery mit Kubernetes</title>
        <description>&lt;p&gt;In der Software-Industrie sind die Reaktionsfähigkeit auf neue Markt­anforderungen und kurze Produkteinführungszeiten entscheidende ­Wett­­­­b­ewerbs­faktoren. Viele Entwicklungs­teams führen daher Devops-Praktiken wie etwa ­Continuous Delivery ein und nutzen aktuelle Technologien wie Kubernetes als unterstützende ­Werkzeuge.&lt;/p&gt;
</description>
        <pubDate>Sun, 07 Apr 2019 19:00:00 +0000</pubDate>
        <link>https://www.martin-helmich.de/https:/t3n.de/magazin/besser-entwickeln-mit-continuous-247076/</link>
        <guid isPermaLink="true">https://www.martin-helmich.de/https:/t3n.de/magazin/besser-entwickeln-mit-continuous-247076/</guid>
        
        <category>kubernetes</category>
        
        <category>docker</category>
        
        <category>helm</category>
        
        
      </item>
    
      <item>
        <title>Gut eingepackt: TYPO3 CMS in Docker betreiben</title>
        <description>&lt;p&gt;Für die 10. Auflage des Buchs &lt;em&gt;Praxiswissen TYPO3&lt;/em&gt; (welches Ende diesen Monats im O’Reilly-Verlag erscheint), suchte ich nach einer Möglichkeit, allen Lesern einen schnellen Start mit TYPO3 zu ermöglichen - und das unter allen Betriebssystemen gleichermaßen. Die Windows-Installer, die früher in der TYPO3-Community kursierten, sind mittlerweile hoffnungslos veraltet und auch die manuelle Installation auf unixoiden Systemen war nichts für jeden.&lt;/p&gt;

&lt;p&gt;Da ich mittlerweile sehr intensiv mit Docker arbeite und Docker über die Docker Toolbox (bzw. &lt;em&gt;Docker for Windows&lt;/em&gt; und &lt;em&gt;Docker for macOS&lt;/em&gt;) auch unter Windows und MacOS gut von Einsteigern benutzbar ist, beschloss ich ein entsprechendes Docker-Image zu entwickeln.&lt;/p&gt;

&lt;div class=&quot;my-alert row default-color-dark white-text z-depth-1&quot;&gt;
      &lt;div class=&quot;col-sm-12&quot;&gt;
        &lt;span class=&quot;icon&quot;&gt;
          &lt;i class=&quot;fa fa-lightbulb&quot;&gt;&lt;/i&gt;
        &lt;/span&gt;
        &lt;div class=&quot;my-alert-body&quot;&gt;
          &lt;strong&gt;Update &lt;/strong&gt; 
  Seitdem ich diesen Artikel ursprünglich im April 2016 geschrieben habe, stehen weiterhin auch Images für TYPO3 8.7, 9.5 und 10.4 zur Verfügung. Dieser Artikel wurde an den entsprechenden Stellen wo nötig aktualisiert.

        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

&lt;h2 id=&quot;erste-schritte&quot;&gt;Erste Schritte&lt;/h2&gt;

&lt;p&gt;Das TYPO3-Image steht im &lt;a href=&quot;https://hub.docker.com/r/martinhelmich/typo3/&quot;&gt;Docker-Hub unter dem Repository-Namen &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;martinhelmich/typo3&lt;/code&gt;&lt;/a&gt; zur Verfügung. Mit untenstehendem &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker pull&lt;/code&gt;-Befehl kann die jeweils aktuellste Version des Images bezogen werden:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker pull martinhelmich/typo3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Darüber hinaus kann beim Pull auch eine spezielle Version herunter geladen werden. Hierzu bietet das Repository die folgenden Tags an:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;martinhelmich/typo3:6&lt;/code&gt; für die jeweils aktuellste 6.2 LTS-Version (&lt;strong&gt;ACHTUNG&lt;/strong&gt;: Keine neuen Versionen mehr!)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;martinhelmich/typo3:7&lt;/code&gt; für die jeweils aktuellste 7.6 LTS-Version (&lt;strong&gt;ACHTUNG&lt;/strong&gt;: Keine neuen Versionen mehr!)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;martinhelmich/typo3:8&lt;/code&gt; für die jeweils aktuellste 8.7 LTS-Version (&lt;strong&gt;ACHTUNG&lt;/strong&gt;: Keine neuen Versionen mehr!)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;martinhelmich/typo3:9&lt;/code&gt; für die jeweils aktuellste 9.5 LTS-Version&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;martinhelmich/typo3:10&lt;/code&gt; oder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;martinhelmich/typo3:latest&lt;/code&gt; für die aktuellste 10.4 LTS-Version&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Beachtet jedoch, dass die TYPO3-Versionen bis einschließlich 8 bereits das Ende ihres Support-Zeitraums erreicht haben. Dies bedeutet, dass für diese Versionen keine weiteren Updates (bzw. für TYPO3 7 und 8 nur noch im Rahmen des kostenpflichtigen Extended Support) veröffentlicht werden.&lt;/p&gt;

&lt;p&gt;Das Image enthält lediglich eine PHP-FPM-Umgebung mit einem Webserver. Um die “Ein Container, eine Anwendung”-Philosophie von Docker zu befolgen, sollte für das Datenbanksystem folglich am besten ein eigener Container gestartet werden, wie hier beispielsweise ein MySQL-Container:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker run -d --name typo3-db \
    -e MYSQL_ROOT_PASSWORD=yoursupersecretpassword \
    -e MYSQL_USER=typo3 \
    -e MYSQL_PASSWORD=yourothersupersecretpassword \
    -e MYSQL_DATABASE=typo3 \
  mysql:5.7 \
    --character-set-server=utf8 \
    --collation-server=utf8_unicode_ci
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;my-alert row danger-color-dark white-text z-depth-1&quot;&gt;
      &lt;div class=&quot;col-sm-12&quot;&gt;
        &lt;span class=&quot;icon&quot;&gt;
          &lt;i class=&quot;fa fa-fire&quot;&gt;&lt;/i&gt;
        &lt;/span&gt;
        &lt;div class=&quot;my-alert-body&quot;&gt;
          &lt;strong&gt;Achtung &lt;/strong&gt; 
  Denkt daran, die Passwort-Platzhalter im obigen Code-Beispielen mit sicheren Werten zu ersetzen!

        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

&lt;p&gt;Danach kann der eigentliche Applikationscontainer gestartet werden:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker run -d --name typo3-web \
    --link typo3-db:db \
    -p 80:80 \
  martinhelmich/typo3:10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Im Anschluss ist die laufende TYPO3-Installation unter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://localhost&lt;/code&gt; erreichbar (falls ihr die Docker Toolbox unter Windows oder MacOS nutzt, nutzt stattdessen die IP-Adresse der virtuellen Maschine, die ihr mit &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-machine ip&lt;/code&gt; herausfinden könnt).&lt;/p&gt;

&lt;p&gt;Das im Container laufende TYPO3 ist noch nicht fertig installiert; dies bedeutet, dass ihr euch zunächst noch durch den Installationsassistenten durchklicken müsst.&lt;/p&gt;

&lt;h2 id=&quot;produktiv-deployment&quot;&gt;Produktiv-Deployment&lt;/h2&gt;

&lt;p&gt;Das oben beschriebene Vorgehen ist für eine Demonstration, zum Ausprobieren oder Entwickeln vollkommen ausreichend. Falls ihr das &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;martinhelmich/typo3&lt;/code&gt;-Dockerimage im Produktivbetrieb einsetzen möchtet, sollten ein paar weitere Vorkehrungen getroffen werden.&lt;/p&gt;

&lt;p&gt;Im Produktivbetrieb ist es besonders wichtig, sich um die Nutzdaten der TYPO3-Installation Gedanken zu machen. Das Image enthält bereits fertig vorkonfigurierte Volumes für die vier Verzeichnisse&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;/var/www/html/fileadmin&lt;/li&gt;
  &lt;li&gt;/var/www/html/typo3conf&lt;/li&gt;
  &lt;li&gt;/var/www/html/typo3temp&lt;/li&gt;
  &lt;li&gt;/var/www/html/uploads&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Diese vier Verzeichnisse enthalten im Regelfall Nutzdaten, die nicht verloren gehen sollten. Das &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;typo3temp/&lt;/code&gt;-Verzeichnis ist ein Sonderfall. Die Daten hierin sind zwar nicht besonders wichtig, da in diesem Verzeichnis jedoch besonders viel geschrieben und gelesen wird, ist es aus Gründen der Performance ratsam, dieses Verzeichnis als Volume zu erstellen.&lt;/p&gt;

&lt;p&gt;Zur Haltung der Nutzdaten kann nun als erstes ein &lt;em&gt;Data-Only&lt;/em&gt;-Container erstellt werden. Dieser wird später nicht laufen (daher empfiehlt es sich sogar, das CMD des Containers mit &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/bin/true&lt;/code&gt; zu überschreiben), sondern wird lediglich die Volumes mit Nutzdaten beinhalten:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker run --name typo3-data martinhelmich/typo3:10 /bin/true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Der eigentliche Applikationscontainer kann dann mit dem &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--volumes-from&lt;/code&gt;-Flag gestartet werden:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker run -d \
    --name typo3-web \
    --link typo3-db:db \
    --volumes-from typo3-data \
    -p 80:80 \
  martinhelmich/typo3:10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Auf diese Weise sind sogar später einfache Versionsupdates und Deployments möglich. Hierzu kann der &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;typo3-web&lt;/code&gt;-Container einfach gelöscht werden; die wichtigen Nutzdaten bleiben in den Volumes des &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;typo3-data&lt;/code&gt;-Containers erhalten und ein neuer &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;typo3-web&lt;/code&gt;-Container kann mit denselben Daten erstellt werden:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ docker rm -f typo3-web
$ docker pull martinhelmich/typo3:10
$ docker run --name typo3-web ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;unter-der-haube&quot;&gt;Unter der Haube&lt;/h2&gt;

&lt;p&gt;Die Dockerfiles des hier vorgestellten Images finden sich &lt;a href=&quot;https://github.com/martin-helmich/docker-typo3&quot;&gt;auf Github&lt;/a&gt;. Anregungen in Form von Issues und Pull Requests sind stets willkommen. Alle Images basieren auf dem &lt;a href=&quot;https://hub.docker.com/_/php/&quot;&gt;offiziellen &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php&lt;/code&gt;-Image&lt;/a&gt; (genauer gesagt, dem &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php:7.4-apache&lt;/code&gt;-Image) und enthalten alle notwendigen PHP-Extensions, die zum Betrieb von TYPO3 benötigt werden.&lt;/p&gt;

</description>
        <pubDate>Fri, 22 Mar 2019 16:25:28 +0000</pubDate>
        <link>https://www.martin-helmich.de/de/blog/typo3-cms-docker.html</link>
        <guid isPermaLink="true">https://www.martin-helmich.de/de/blog/typo3-cms-docker.html</guid>
        
        <category>typo3</category>
        
        <category>docker</category>
        
        
      </item>
    
      <item>
        <title>Kubernetes-CRDs über die client-go-Bibliothek auslesen</title>
        <description>&lt;p&gt;Der Kubernetes-API-Server kann einfach über &lt;a href=&quot;https://kubernetes.io/docs/tasks/access-kubernetes-api/extend-api-custom-resource-definitions/&quot;&gt;Custom Resource Definitions&lt;/a&gt; erweitert werden. Der Zugriff auf solche Ressources über die weitverbreitete &lt;a href=&quot;https://github.com/kubernetes/client-go&quot;&gt;client-go&lt;/a&gt;-Bibliothek ist allerdings ein wenig komplexer und nicht sehr gründlich dokumentiert. Dieser Artikel enthält eine kurze Einführung, wie ihr auf Kubernetes-CRDs aus eurem eigenen Go-Code heraus zugreifen könnt.&lt;/p&gt;

</description>
        <pubDate>Wed, 28 Mar 2018 19:00:00 +0000</pubDate>
        <link>https://www.martin-helmich.de/en/blog/kubernetes-crd-client.html</link>
        <guid isPermaLink="true">https://www.martin-helmich.de/en/blog/kubernetes-crd-client.html</guid>
        
        <category>kubernetes</category>
        
        <category>docker</category>
        
        <category>golang</category>
        
        
      </item>
    
      <item>
        <title>Codequalität in TYPO3-Projekten</title>
        <description>&lt;p&gt;Vor einiger Zeit schrieb ich (ursprünglich als Teil eines größeren &lt;a href=&quot;https://t3n.de/magazin/continuous-integration-typo3-236672/&quot;&gt;Artikels für das t3n-Magazin&lt;/a&gt;) ein &lt;a href=&quot;https://github.com/martin-helmich/typo3-typoscript-lint&quot;&gt;kleines Tool zur Analyse der Codequalität in TypoScript-Dateien&lt;/a&gt;, welches sich auch nach einigen Jahren noch einer gewissen Beliebtheit erfreut. Aus diesem Grund gibt es hier noch einmal eine kurze Zusammenfassung und einen Überblick über die Benutzung.&lt;/p&gt;

&lt;script src=&quot;https://asciinema.org/a/1jOJv3Z6onWSdIkTAxAWsGgoy.js&quot; id=&quot;asciicast-1jOJv3Z6onWSdIkTAxAWsGgoy&quot; async=&quot;&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;was-ist-ein-linter&quot;&gt;Was ist ein Linter?&lt;/h2&gt;

&lt;p&gt;Der Begriff des “Lintings” geht auf das betagte Unix-Tool &lt;em&gt;lint&lt;/em&gt; zurück. Dieses diente ursprünglich dazu, Programmierfehler in C-Quelltexten zu finden. Mittlerweile versteht man unter einem “Linter” ein Tool, das Fehler (einschließlich stilistischer Fehler) in Programmquelltexten erkennt und meldet (Quelle: &lt;a href=&quot;https://en.wikipedia.org/wiki/Lint_(software)&quot;&gt;Wikipedia&lt;/a&gt;). Linter helfen Entwicklern, in Projekten einen einheitlichen Programmierstil einzuhalten, und mögliche Fehler möglichst früh durch statische Codeanalyse zu erkennen.&lt;/p&gt;

&lt;p&gt;Linter gibt es für alle möglichen Programmiersprachen; Web-Entwickler kennen womöglich &lt;a href=&quot;http://jslint.com/&quot;&gt;JSLint&lt;/a&gt;, &lt;a href=&quot;http://csslint.net/&quot;&gt;CSSLint&lt;/a&gt; oder &lt;a href=&quot;http://htmlhint.com/&quot;&gt;HTMLLint&lt;/a&gt;. In diese Liste reiht sich nun auch &lt;a href=&quot;https://github.com/martin-helmich/typo3-typoscript-lint&quot;&gt;TypoScript Lint&lt;/a&gt; ein, welches ähnliche Funktionen für das in TYPO3-Projekten gebräuchliche TypoScript anbietet. Als kleines Beispiel sei folgender TypoScript-Quelltext betrachtet:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typoscript&quot; data-lang=&quot;typoscript&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;page = PAGE
page  {
  10 = FLUIDTEMPLATE
   10 {
    templateName = Default
    templateRootPaths.10 = fileadmin/templates
   templateRootPaths.20 = EXT:mysite/Resources/Private/Templates

    layoutRootPaths {
    }
  }
}

#page.includeJS.main = fileadmin/js/app.js
page.includeJS.main = fileadmin/js/app.min.js

page.10.templateRootPaths.10 = fileadmin/templates2
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In diesem Code-Abschnitt gibt es einige offensichtliche stilistische Punkte zu bemängeln (sortiert nach Schwere):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In Zeile 6 wird die Eigenschaft &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;page.10.templateRootPaths.10&lt;/code&gt; zugewiesen. Allerdings wird genau diese Eigenschaft in Zeile 17 wieder überschrieben. Dies ist eine gefährliche Falle: Ein unbedachter Entwickler könnte nun im guten Glauben Zeile 6 verändern, ohne dass dies irgendeine Auswirkung hätte – ein Fehler, den zu debuggen dann im Anschluss wertvolle Zeit kosten würde.&lt;/li&gt;
  &lt;li&gt;Nachdem der erste Zuweisungsblock zu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;page&lt;/code&gt; geschlossen wurde, folgt noch eine zweite Zuweisung zu einem Unterobjekt von &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;page&lt;/code&gt;. Dies könnte überraschen, da ein Leser des Quelltextes nicht unbedingt damit rechnet, dass nach dem Zuweisungsblock noch einzelne Unterattribute des &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;page&lt;/code&gt;-Objekts zugewiesen werden.&lt;/li&gt;
  &lt;li&gt;Die Kommentarzeile in Zeile 14 enthält offensichtlich auskommentierten Code. Dieser stört die Lesbarkeit und sollte komplett entfernt werden. Dafür gibt es ja schließlich Versionsverwaltung!&lt;/li&gt;
  &lt;li&gt;Die Einrückung der Datei ist nicht konsistent. Die &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;10&lt;/code&gt; in den Zeilen 3 und 4 sollten gleich weit eingerückt sein, sind es aber nicht. Gleiches gilt in Zeile 7. Gerade in größeren Dateien können solche Einrückungsfehler der Lesbarkeit des Quelltextes enorm schaden.&lt;/li&gt;
  &lt;li&gt;Die Zuweisungen zu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;templateRootPaths&lt;/code&gt; in den Zeilen 6 und 7 beginnen mit demselben Pfad-Segment. Zur besseren Lesbarkeit könnten diese beiden Zuweisungen in einen Block ausgelagert werden.&lt;/li&gt;
  &lt;li&gt;Die Zuweisung zu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;layoutRootPaths&lt;/code&gt; ist komplett leer.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Und tatsächlich generiert der TypoScript-Linter bei einer Eingabedatei mit obigem Inhalt folgende Ausgabe, welche alle oben angemerkten Fehler (und sogar noch ein paar mehr) ankreidet:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;Completed with 8 issues

CHECKSTYLE REPORT
=&amp;gt; /Users/mhelmich/Git/Github/typo3-ci-example/test.typoscript.
   2 Accessor should be followed by single space.
   4 Expected indent of 2 spaces.
   6 Value of object &quot;page.10.templateRootPaths.10&quot; is overwritten in line 17.
   6 Common path prefix &quot;templateRootPaths&quot; with assignment to &quot;templateRootPaths.20&quot; in line 7. Consider merging them into a nested assignment.
   7 Expected indent of 4 spaces.
   7 Common path prefix &quot;templateRootPaths&quot; with assignment to &quot;templateRootPaths.10&quot; in line 6. Consider merging them into a nested assignment.
   9 Empty assignment block
  14 Found commented code (page.includeJS.main = fileadmin/js/app.js).
  15 Assignment to value &quot;page.includeJS.main&quot;, altough nested statement for path &quot;page&quot; exists at line 2.
  17 Assignment to value &quot;page.10.templateRootPaths.10&quot;, altough nested statement for path &quot;page&quot; exists at line 2.
  17 Common path prefix &quot;page&quot; with assignment to &quot;page.includeJS.main&quot; in line 15. Consider merging them into a nested assignment.

SUMMARY
12 issues in total. (11 warnings, 1 infos)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Eine vollständige Liste aller vom TypoScript-Linter erkannten Fehler findet sich in der &lt;a href=&quot;https://github.com/martin-helmich/typo3-typoscript-lint#features&quot;&gt;README des Projekts&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;p&gt;Der Typoscript-Linter wird per &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt; installiert. Das funktioniert natürlich am besten, wenn das TYPO3-Projekt, in dem der Linter genutzt werden soll, selbst ebenfalls mit Composer verwaltet wird (zum Setup von TYPO3 mit Composer sei auf die &lt;a href=&quot;https://github.com/TYPO3/TYPO3.CMS.BaseDistribution&quot;&gt;zugehörige README verwiesen&lt;/a&gt;). In diesem Fall reicht ein einfaches &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;composer require --dev&lt;/code&gt; im Projektverzeichnis:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;composer require &lt;span class=&quot;nt&quot;&gt;--dev&lt;/span&gt; helmich/typo3-typoscript-lint
&lt;span class=&quot;go&quot;&gt;Using version ^1.4 for helmich/typo3-typoscript-lint
./composer.json has been updated
Loading composer repositories with package information
Updating dependencies (including require-dev)
Package operations: 7 installs, 0 updates, 0 removals
  - Installing symfony/filesystem (v4.0.3): Downloading (100%)
  - Installing symfony/config (v4.0.3): Downloading (100%)
  - Installing psr/container (1.0.0): Downloading (100%)
  - Installing symfony/dependency-injection (v4.0.3): Downloading (100%)
  - Installing helmich/typo3-typoscript-parser (v1.1.2): Downloading (100%)
  - Installing symfony/event-dispatcher (v4.0.3): Downloading (100%)
  - Installing helmich/typo3-typoscript-lint (v1.4.4): Downloading (100%)
Writing lock file
Generating autoload files
Generating  class alias map file
Inserting class alias loader into main autoload.php file&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Das &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--dev&lt;/code&gt;-Flag stellt sicher, dass der Linter nicht mit installiert wird, wenn das Projekt auf einem Produktivsystem installiert wird. Der Linter steht im Anschluss im Verzeichnis &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vendor/bin&lt;/code&gt; zur Verfügung und kann mit &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vendor/bin/typoscript-lint&lt;/code&gt; aufgerufen werden.&lt;/p&gt;

&lt;p&gt;Falls euer TYPO3-Projekt nicht mit Composer verwaltet wird, kann auch der &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;composer global&lt;/code&gt;-Befehl genutzt werden, um den Linter global zu installieren. In diesem Fall steht der Linter dann nicht im Projektverzeichnis, sondern im Home-Verzeichnis eures Nutzers unter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$HOME/.composer/vendor/bin/typoscript-lint&lt;/code&gt; zur Verfügung (wenn ihr das Verzeichnis &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$HOME/.composer/vendor/bin&lt;/code&gt; in euren Suchpfad eintragt, reicht anschließend auch ein einfaches &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;typoscript-lint&lt;/code&gt; zum Aufruf).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;composer global require helmich/typo3-typoscript-lint
&lt;span class=&quot;go&quot;&gt;Changed current directory to /Users/mhelmich/.composer
Using version ^1.4 for helmich/typo3-typoscript-lint
./composer.json has been created
Loading composer repositories with package information
Updating dependencies (including require-dev)
Package operations: 11 installs, 0 updates, 0 removals
  - Installing symfony/yaml (v4.0.3): Loading from cache
  - Installing symfony/filesystem (v4.0.3): Loading from cache
  - Installing symfony/config (v4.0.3): Loading from cache
  - Installing psr/container (1.0.0): Loading from cache
  - Installing symfony/dependency-injection (v4.0.3): Loading from cache
  - Installing helmich/typo3-typoscript-parser (v1.1.2): Loading from cache
  - Installing symfony/event-dispatcher (v4.0.3): Loading from cache
  - Installing symfony/finder (v4.0.3): Loading from cache
  - Installing symfony/polyfill-mbstring (v1.6.0): Loading from cache
  - Installing symfony/console (v4.0.3): Loading from cache
  - Installing helmich/typo3-typoscript-lint (v1.4.4): Loading from cache
Writing lock file
Generating autoload files&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;nutzung&quot;&gt;Nutzung&lt;/h2&gt;

&lt;p&gt;Nach der Installation kann &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;typoscript-lint&lt;/code&gt; auf beliebige Typoscript-Dateien aufgerufen werden. Die Dateien werden analyisiert, und das Tool wird euch auf Stilfehler (und auch echte Fehler) im Quelltext hinweisen. Die Ausgabe des Tools könnte beispielsweise aussehen wie folgt:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/typoscript-lint-output.png&quot; alt=&quot;Ausgabe von `typoscript-lint`&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mit den Optionen &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-f xml&lt;/code&gt; und &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-o ausgabedatei.xml&lt;/code&gt; kann auch eine XML-Ausgabedatei generiert werden, die dem verbreiteten &lt;a href=&quot;http://checkstyle.sourceforge.net/&quot;&gt;Checkstyle-Format&lt;/a&gt; folgt. Auf diese Weise kann der Typoscript-Linter bequem in &lt;em&gt;Continuous Integration&lt;/em&gt;-Umgebungen wie etwa Jenkins integriert werden (für das ein &lt;a href=&quot;https://wiki.jenkins.io/display/JENKINS/Checkstyle+Plugin&quot;&gt;Plugin für Checkstyle&lt;/a&gt; existiert).&lt;/p&gt;

&lt;h2 id=&quot;konfiguration&quot;&gt;Konfiguration&lt;/h2&gt;

&lt;p&gt;Stilfragen in Programmiersprachen ist häufig subjektiv und abhängig von persönlichen Vorlieben. Bestes Beispiel ist wahrscheinlich die &lt;a href=&quot;https://www.youtube.com/watch?v=SsoOG6ZeyUI&quot;&gt;“Tabs oder Spaces?”&lt;/a&gt;-Frage. Natürlich kann der TypoScript-Linter an derartige Präferenzen angepasst werden. Hierzu muss im Projektverzeichnis eine Konfigurationsdatei &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;typoscript-lint.yml&lt;/code&gt; hinterlegt werden (frühere Versionen des Linters benutzten &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tslint.yml&lt;/code&gt; als Dateiname für die Konfigurationsdatei, was allerdings zu einigen &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;offensichtlichen Konflikten&lt;/a&gt; führte). Hier kann beispielsweise die Einrückung konfiguriert werden (hier etwa für die Einrückung mit Tabs statt Spaces):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;na&quot;&gt;sniffs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Indentation&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;useSpaces&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;indentPerLevel&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Auch das Deaktivieren einzelner Überprüfungen ist möglich. Wenn euch beispielsweise die Empfehlungen für das Verschachteln von Statements nerven, kann diese Überprüfung einfach deaktiviert werden:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;na&quot;&gt;sniffs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;NestingConsistency&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;disabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;fragen--feedback&quot;&gt;Fragen &amp;amp; Feedback?&lt;/h2&gt;

&lt;p&gt;Der TypoScript-Linter ist &lt;a href=&quot;https://github.com/martin-helmich/typo3-typoscript-lint&quot;&gt;auf GitHub verfügbar&lt;/a&gt; und steht unter der MIT-Lizenz zur Verfügung. Fällt euch bei der Nutzung des Linters ein Fehler auf, nutzt gerne den &lt;a href=&quot;https://github.com/martin-helmich/typo3-typoscript-lint/issues&quot;&gt;Bugtracker auf GitHub&lt;/a&gt;. Auch Verbesserungsvorschläge in Form von Pull Requests sind stets willkommen.&lt;/p&gt;

</description>
        <pubDate>Thu, 18 Jan 2018 20:45:00 +0000</pubDate>
        <link>https://www.martin-helmich.de/de/blog/codequality-typo3.html</link>
        <guid isPermaLink="true">https://www.martin-helmich.de/de/blog/codequality-typo3.html</guid>
        
        <category>typo3</category>
        
        
      </item>
    
      <item>
        <title>NGINX-Performancemetriken mit Prometheus</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://prometheus.io&quot;&gt;Prometheus&lt;/a&gt; ist eine Kombination aus Monitoring-Werkzeug und
Zeitreihen-Datenbank, die ich in den letzten Monaten sehr zu schätzen gelernt
habe. Dieser Artikel zeigt, wie Prometheus genutzt werden kann, um verschiedene
Webserver-Metriken (ohne Konfigurationseingriff) in Prometheus nutzbar zu
machen.&lt;/p&gt;

&lt;p&gt;Grundsätzlich werden Metriken nach dem Pull-Prinzip in Prometheus importiert.
Dies bedeutet, dass ein zu überwachender Service einen HTTP-Endpunkt anbieten
muss, der von Prometheus dann in regelmäßigen Intervallen (standardmäßig 15
Sekunden) abgefragt werden kann. Dieser Endpunkt (beispielsweise
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://&amp;lt;service-name&amp;gt;/metrics&lt;/code&gt;) muss dann eine Antwort mit entsprechenden
Zeitreihendaten ausliefern:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http_response_count_total{application=&quot;my-application&quot;} 12423
http_response_time_seconds{application=&quot;my-application&quot;} 1832745
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dies funktioniert ausgezeichnet in Microservice-Architekturen – hier kann jeder
Service einen einzelnen &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/metrics&lt;/code&gt;-Endpunkt implementieren, der alle denkbaren
Kennzahlen auswirft.&lt;/p&gt;

&lt;h2 id=&quot;das-problem&quot;&gt;Das Problem&lt;/h2&gt;

&lt;p&gt;Nicht so gut funktioniert dieser Ansatz, wenn Prometheus
zur Überwachung von Performance-Metriken einer (älteren) Web-Applikation genutzt
werden soll, die in einem “klassischen” LEMP-Stack (Linux, NGINX, MySQL, PHP)
betrieben wird. Dies liegt daran, dass eine PHP-Applikation üblicherweise nicht
über solche Metriken wie Anzahl der verarbeiteten Requests oder die
durchschnittliche Request-Dauer verfügt (oder sie selbst erheben und dann in
einer Datenbank persistieren müsste).&lt;/p&gt;

&lt;p&gt;Für die Integration von NGINX-Webservern mit Prometheus gibt es bereits mehrere
Konnektoren im Internet – diese werten jedoch entweder nur die Informationen
der NGINX-Statusseite aus, die über das Modul &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ngx_http_stub_status_module&lt;/code&gt;
angeboten wird (nicht detailliert genug für meinen Anwendungsfall), oder
erfordern eine Umkonfiguration des Webservers, um einen neuen Logging-Server
anzusprechen (zu invasiv für meine gehegte und gepflegte Alt-Applikation).&lt;/p&gt;

&lt;h2 id=&quot;meine-lösung&quot;&gt;Meine Lösung&lt;/h2&gt;

&lt;p&gt;Meine Lösung des Problems besteht nun in einem eigenen Exporter, der
Performance-Metriken aus bestehenden NGINX-Accesslogs generieren kann. Dieser
steht als &lt;a href=&quot;https://github.com/martin-helmich/prometheus-nginxlog-exporter&quot;&gt;Open Source auf Github zur Verfügung&lt;/a&gt;, und stellt einem
Prometheus-Server auf Grundlage einer bestehenden &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;access.log&lt;/code&gt;-Datei diverse
Metriken zur Verfügung:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Anzahl der verarbeiteten Requests pro Request-Methode und Status&lt;/li&gt;
  &lt;li&gt;Summe der für die bisher verarbeiteten Requests notwendige Zeit, pro Methode
und Status (zusammen mit der Anzahl kann hieraus die durchschnittliche
Antwortzeit über den zeitlichen Verlauf ermittelt werden)&lt;/li&gt;
  &lt;li&gt;Summe der “Upstream Time”, also der Zeit, die NGINX damit zugebracht hat, auf
PHP-FPM oder andere FastCGI-Module zu warten&lt;/li&gt;
  &lt;li&gt;Diverse Quantile der Antwortzeit und Upstream Time&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;konfiguration&quot;&gt;Konfiguration&lt;/h2&gt;

&lt;p&gt;Der NGINX-Exporter wird über eine HCL-Konfigurationsdatei konfiguriert. In der
Konfigurationsdatei können mehrere “Namespaces” konfiguriert werden – diese
werden dann als separate Metriken exportiert. Nachfolgend ein kurzes Beispiel
für eine solche Konfigurationsdatei:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-tf&quot; data-lang=&quot;tf&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4040&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;0.0.0.0&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;app1&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;remote_addr - &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;remote_user [&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;time_local] &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;status &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;body_bytes_sent &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;http_referer&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;http_user_agent&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;http_x_forwarded_for&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;source_files&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/var/log/nginx/access.log&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;labels&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;my-application&quot;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;environment&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;production&quot;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;bar&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Beim Start des Exporters startet dieser einen eigenen HTTP-Server, der auf der
konfigurierten IP-Adresse und Port lauscht (standardmäßig &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0.0.0.0:4040&lt;/code&gt;). Über
die URL &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://&amp;lt;IP&amp;gt;:4040/metrics&lt;/code&gt; können dann von Prometheus die entsprechenden
Performance-Metriken abgegriffen werden.&lt;/p&gt;

&lt;p&gt;Der Namespace-Name (hier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app1&lt;/code&gt;) wird später in den Namen der exportierten
Metriken übernommen – also beispielsweise &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app1_http_response_time_seconds&lt;/code&gt;.
Das Format (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;format&lt;/code&gt;) gibt das Format an, in dem NGINX die Access-Logs schreibt
(für mehr Informationen dazu sei &lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_log_module.html#log_format&quot;&gt;auf die Dokumentation&lt;/a&gt; verwiesen).&lt;/p&gt;

&lt;h2 id=&quot;start-des-exporters&quot;&gt;Start des Exporters&lt;/h2&gt;

&lt;p&gt;Der eigentliche Exporter ist ein statisch kompiliertes Go-Binary, welches nach
dem Herunterladen sofort installiert werden kann:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget https://github.com/martin-helmich/prometheus-nginxlog-exporter/releases/download/v1.0.0/prometheus-nginxlog-exporter
./prometheus-nginxlog-exporter -config-file /pfad/zur/config.hcl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Um sicherzustellen, dass der Exporter beim Systemstart automatisch startet,
kann eine entsprechende systemd-Unit konfiguriert werden (ab Debian 8, Ubuntu
16.04 oder CentOS 7). Diese kann platziert werden unter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/systemd/system/prometheus-nginxlog-exporter.service&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nn&quot;&gt;[Unit]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;NGINX metrics exporter for Prometheus&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;After&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;network-online.target&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;[Service]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/usr/local/bin/prometheus-nginxlog-exporter -config-file /etc/prometheus-nginxlog-exporter.hcl&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;Restart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;ProtectSystem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;full&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;CapabilityBoundingSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;

&lt;span class=&quot;nn&quot;&gt;[Install]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;multi-user.target&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Beachtet, dass diese Unitfile davon ausgeht, dass das Binary unter
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/local/bin/prometheus-nginxlog-exporter&lt;/code&gt; und die Konfigurationsdatei unter
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/prometheus-nginxlog-exporter.hcl&lt;/code&gt; liegt. Diese Pfade können natürlich nach
Bedarf angepasst werden.&lt;/p&gt;

&lt;h2 id=&quot;das-ergebnis&quot;&gt;Das Ergebnis&lt;/h2&gt;

&lt;p&gt;Ich betreibe den &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;prometheus-nginxlog-exporter&lt;/code&gt; nun seit einiger Zeit schon
produktiv. Insbesondere zusammen mit &lt;a href=&quot;https://grafana.com/&quot;&gt;Grafana&lt;/a&gt; lassen sich wunderbare
Auswertungen und Monitoring-Dashboards erstellen:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.martin-helmich.de/assets/posts/prometheus-nginx-monitoring.png&quot; alt=&quot;NGINX-Monitoring in Aktion&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Die Diagramme im obigen Screenshot wurden aus den folgenden Prometheus-Queries
generiert:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Durchschnittliche Antwortzeit: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sum(rate(app_http_response_time_seconds_sum[5m])) by (instance) / sum(rate(app_http_response_time_seconds_count[5m])) by (instance)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Anfragen pro Sekunde: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sum(rate(app_http_response_time_seconds_count[1m])) by (instance)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Antwortzeit (90%-Quantil): &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app_http_response_time_seconds{quantile=&quot;0.9&quot;,method=&quot;GET&quot;,status=&quot;200&quot;}&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;HTTP-Traffic: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sum(rate(app_http_response_size_bytes[5m])) by (instance)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Statuscodes pro Sekunde: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sum(rate(app_http_response_count_total[1m])) by (status)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 24 Mar 2017 10:05:00 +0000</pubDate>
        <link>https://www.martin-helmich.de/de/blog/monitoring-nginx.html</link>
        <guid isPermaLink="true">https://www.martin-helmich.de/de/blog/monitoring-nginx.html</guid>
        
        <category>prometheus</category>
        
        <category>nginx</category>
        
        <category>monitoring</category>
        
        
      </item>
    
      <item>
        <title>Surf In The Cloud: TYPO3 Surf-Deployments nach EC2</title>
        <description>&lt;p&gt;Nachdem mir in den letzten Tagen das manuelle Deployment meiner kleinen Neos-Seite zu aufwändig wurde, beschloss ich, dieses Deployment über TYPO3 Surf zu automatisieren. Da ich auch beruflich viel mit Surf zu tun habe, war das Deployment schnell geschrieben. Dennoch war ich mit der ersten Version meines Deployments noch nicht ganz glücklich:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;TYPO3\Surf\Domain\Model\Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;i-54932495&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setHostname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ec2-52-28-61-14.eu-central-1.compute.amazonaws.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setOption&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;username&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;neos&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Was würde passieren, wenn ich meine winzige Micro-EC2-Instanz einmal löschen würde? Oder falls ich beschlösse, meine Seite auf zwei (winzigen) Micro-Instanzen zu betreiben? Deutlich eleganter ist es, sich diese Informationen einfach direkt von der EC2-API zu laden. Hierzu kann das AWS-SDK für PHP genutzt werden, welches einfach per Composer bezogen werden kann:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ composer require aws/aws-sdk-php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Und nun zahlt sich auch aus, dass Deployment-Definitionen in TYPO3 Surf einfach nur einfache PHP-Dateien sind. So kann man einfach alle Instanzen (optional gefiltert nach einem bestimmten Tag) aus der AWS-API laden und als Node dem Deployment hinzufügen:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ec2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Aws\Ec2\Ec2Client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'profile'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'default'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'region'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'eu-central-1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ec2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;describeInstances&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'Filters'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tag:purpose'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Values'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mhde-prod'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Name'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'instance-state-name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Values'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'running'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$application&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;TYPO3\Surf\Application\TYPO3\Flow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'martin-helmich.de'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Reservations'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$reservation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Instances'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;TYPO3\Surf\Domain\Model\Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'InstanceId'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setHostname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'PublicDnsName'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setOption&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'username'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'neos'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$application&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Und fertig! Nie wieder neue Server im Deployment konfigurieren.&lt;/p&gt;
</description>
        <pubDate>Mon, 20 Apr 2015 19:42:28 +0000</pubDate>
        <link>https://www.martin-helmich.de/de/blog/typo3-surf-deployment-ec2.html</link>
        <guid isPermaLink="true">https://www.martin-helmich.de/de/blog/typo3-surf-deployment-ec2.html</guid>
        
        <category>neos</category>
        
        <category>surf</category>
        
        <category>aws</category>
        
        
      </item>
    
      <item>
        <title>RSS-Feeds mit TYPO3 Neos</title>
        <description>&lt;p&gt;RSS (für &lt;em&gt;Really Simple Syndication&lt;/em&gt;) ist ein XML-basiertes Dateiformat, über das Veränderungen an Websites bekannt gemacht werden können. Speziell für Blog- und Nachrichtenseiten bieten sich solche RSS-Feeds an; Leser können diesen einfach in einen Feed-Reader einbinden, um auf dem Laufenden zu bleiben. In diesem Artikel erkläre ich euch, wie ihr in TYPO3 Neos solch einen Feed erstellen könnt.&lt;/p&gt;

&lt;h2 id=&quot;routing-konfigurieren&quot;&gt;Routing konfigurieren&lt;/h2&gt;

&lt;p&gt;Zunächst definieren wir ein alternatives Request-Format. Dies geschieht in der Datei Routes.yaml (entweder einfach in der globalen, oder in eurem Package, welches dann aber explizit in der globalen Datei eingebunden werden muss):&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;-
  name: &amp;#39;RSS feed&amp;#39;
  uriPattern: &amp;#39;{node}.xml&amp;#39;
  defaults:
    &amp;#39;@package&amp;#39;: TYPO3.Neos
    &amp;#39;@controller&amp;#39;: Frontend\Node
    &amp;#39;@action&amp;#39;: show
    &amp;#39;@format&amp;#39;: rss
  routeParts:
    node:
      handler: TYPO3\Neos\Routing\FrontendNodeRoutePartHandlerInterface
  appendExceedingArguments: true&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/martin-helmich/aab1c83379063d4beba5.js?file=Routes.yaml&quot;&gt; &lt;/script&gt;

&lt;p&gt;Diese Konfiguration entspricht übrigens nahezu der Standard-Konfiguration, die Neos für das Ausliefern von Content mitliefert. Lediglich das Format ist geändert.&lt;/p&gt;

&lt;h2 id=&quot;ab-ins-typoscript&quot;&gt;Ab ins TypoScript&lt;/h2&gt;

&lt;p&gt;Die Standard-TypoScript-Konfiguration von Neos sieht bereits vor, dass bei einem Format, das anders lautet als &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;html&lt;/code&gt; einfach das TypoScript-Objekt mit dem entsprechenden Namen gerendert wird. Wir müssen an dieser Stelle also nur noch das Objekt mit dem Namen &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rss&lt;/code&gt; implementieren. Da hier z.B. auch HTTP-Header verändert werden müssen (wir haben ja schließlich einen anderen Content-Type), kann hier am besten gleich die &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TYPO3.TypoScript:Http.Message&lt;/code&gt;-Klasse genutzt werden. Das Endergebnis ist recht komplex; anstatt es nach und nach aufzubauen, präsentiere ich erstmal den ganzen Block:&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;rss = TYPO3.TypoScript:Http.Message {
	@override.defaultAuthor = &amp;#39;Martin Helmich&amp;#39;

	httpResponseHead {
		headers.Content-Type = &amp;#39;application/rss+xml&amp;#39;
	}

	content = TYPO3.TypoScript:Template {
		@override.articles = ${q(site).find(&amp;#39;[instanceof Helmich.Homepage:BlogArticle]&amp;#39;)}

		templatePath = &amp;#39;resource://Helmich.Homepage/Private/Templates/Page/Rss.xml&amp;#39;
		sectionName = &amp;#39;main&amp;#39;

		language = ${node.context.targetDimensions[&amp;#39;language&amp;#39;]}
		title    = ${q(site).property(&amp;#39;title&amp;#39;)}
		author   = ${defaultAuthor}
		date     = ${articles.first().property(&amp;#39;date&amp;#39;)}

		items = TYPO3.TypoScript:Collection {
			collection = ${articles}
			itemName = &amp;#39;article&amp;#39;
			itemRenderer = TYPO3.TypoScript:Template {
				templatePath = &amp;#39;resource://Helmich.Homepage/Private/Templates/Page/Rss.xml&amp;#39;
				sectionName = &amp;#39;item&amp;#39;

				article = ${article}
				author = ${q(article).property(&amp;#39;author&amp;#39;) ? q(article).property(&amp;#39;author&amp;#39;) : defaultAuthor}

				abstract = TYPO3.TypoScript:Collection {
					collection = ${q(article).children(&amp;#39;main&amp;#39;).children(&amp;#39;[instanceof TYPO3.Neos.NodeTypes:Text]&amp;#39;).first().get()}
					itemName = &amp;#39;node&amp;#39;
					itemRenderer = TYPO3.Neos:ContentCase
				}
			}
		}

		@process.tidy = Helmich.Homepage:TidyXml

		@cache {
			mode = &amp;#39;cached&amp;#39;
			entryTags {
				1 = &amp;#39;NodeType_Helmich.Homepage:BlogArticle&amp;#39;
			}
		}
	}
}&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/martin-helmich/aab1c83379063d4beba5.js?file=Rss.ts2&quot;&gt; &lt;/script&gt;

&lt;p&gt;Nun im Detail: Der Inhalt des Feeds wird von einem Fluid-Template gerendert. Dem Template werden einige Variablen zugewiesen, die aus der aktuellen Content Node, bzw. dem Kontext geladen werden (z.B. die Sprache). Die Variable &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;items&lt;/code&gt; ist schließlich eine ContentCollection, die in diesem Fall von einer Eel-Expression befüllt wird (hier sind das alle Nodes vom Typ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Helmich.Homepage:BlogArticle&lt;/code&gt;; das ist aber hochindividuell und muss je nach Usecase angepasst werden).&lt;/p&gt;

&lt;p&gt;Jedes Element dieser ContentCollection wird dann mit einem bestimmten Abschnitt des Templates gerendert. Die meisten Variablen werden auch hier aus der jeweiligen Node bezogen. Als &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;abstract&lt;/code&gt;-Variable wird der Inhalt des ersten Text-Elements unterhalb der jeweiligen Node ausgewählt.&lt;/p&gt;

&lt;p&gt;Der &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@cache&lt;/code&gt;-Parameter definiert schließlich, dass die Ausgabe gecached werden soll. Die Tag-Konfiguration bewirkt, dass der Cache jedes Mal invalidiert wird, wenn eine Node vom Typ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Helmich.Homepage:BlogArticle&lt;/code&gt; bearbeitet wird. Aber auch diese Konfiguration muss wahrscheinlich individuell angepasst werden.&lt;/p&gt;

&lt;h2 id=&quot;der-fluid-view&quot;&gt;Der Fluid-View&lt;/h2&gt;

&lt;p&gt;Abschließend noch das Fluid-Template. Dieses ist recht unspannend, da lediglich die Variablen, die zuvor im TypoScript zugewiesen wurden, in eine XML-Struktur regendert werden.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;{namespace ts=TYPO3\TypoScript\ViewHelpers}
{namespace neos=TYPO3\Neos\ViewHelpers}

&amp;lt;f:section name=&amp;quot;main&amp;quot;&amp;gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;rss version=&amp;quot;2.0&amp;quot;&amp;gt;
    &amp;lt;channel&amp;gt;
        &amp;lt;title&amp;gt;{title}&amp;lt;/title&amp;gt;
        &amp;lt;link&amp;gt;&amp;lt;neos:uri.node node=&amp;quot;{node}&amp;quot; absolute=&amp;quot;true&amp;quot; /&amp;gt;&amp;lt;/link&amp;gt;
        &amp;lt;description&amp;gt;Kurze Beschreibung des Feeds&amp;lt;/description&amp;gt;
        &amp;lt;language&amp;gt;{language}&amp;lt;/language&amp;gt;
        &amp;lt;copyright&amp;gt;{author}&amp;lt;/copyright&amp;gt;
        &amp;lt;pubDate&amp;gt;{date -&amp;gt; f:format.date(format: &amp;#39;r&amp;#39;)}&amp;lt;/pubDate&amp;gt;
        &amp;lt;image&amp;gt;
            &amp;lt;url&amp;gt;URL einer einzubindenden Grafik&amp;lt;/url&amp;gt;
            &amp;lt;title&amp;gt;Bildtitel&amp;lt;/title&amp;gt;
            &amp;lt;link&amp;gt;URL, mit der das Bild verknüpft ist&amp;lt;/link&amp;gt;
        &amp;lt;/image&amp;gt;

        {items -&amp;gt; f:format.raw()}

    &amp;lt;/channel&amp;gt;
&amp;lt;/rss&amp;gt;
&amp;lt;/f:section&amp;gt;

&amp;lt;f:section name=&amp;quot;item&amp;quot;&amp;gt;
&amp;lt;item&amp;gt;
    &amp;lt;title&amp;gt;{article.properties.title}&amp;lt;/title&amp;gt;
    &amp;lt;description&amp;gt;{abstract -&amp;gt; f:format.raw()}&amp;lt;/description&amp;gt;
    &amp;lt;link&amp;gt;&amp;lt;neos:uri.node node=&amp;quot;{article}&amp;quot; /&amp;gt;&amp;lt;/link&amp;gt;
    &amp;lt;author&amp;gt;{author}&amp;lt;/author&amp;gt;
    &amp;lt;guid&amp;gt;{article.identifier}&amp;lt;/guid&amp;gt;
    &amp;lt;pubDate&amp;gt;{article.properties.date -&amp;gt; f:format.date(format: &amp;#39;r&amp;#39;)}&amp;lt;/pubDate&amp;gt;
&amp;lt;/item&amp;gt;
&amp;lt;/f:section&amp;gt;&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/martin-helmich/aab1c83379063d4beba5.js?file=Rss.xml&quot;&gt; &lt;/script&gt;

&lt;h2 id=&quot;verlinkung-im-head-bereich&quot;&gt;Verlinkung im &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt;-Bereich&lt;/h2&gt;

&lt;p&gt;Nun müssen die Besucher der Seite nur noch darauf aufmerksam gemacht werden, dass es den RSS-Feed gibt. Glücklicherweise sind moderne Browser intelligent genug, und lesen einfach einen meta-Tag aus, der im HTML-Head platziert werden kann. Auch das können wir über TypoScript machen:&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;page = TYPO3.Neos:Page {
	head {
		// ...

		rss = TYPO3.TypoScript:Tag {
			tagName = &amp;#39;link&amp;#39;
			attributes {
				rel = &amp;#39;alternate&amp;#39;
				type = &amp;#39;application/rss+xml&amp;#39;
				title = &amp;#39;RSS&amp;#39;
				href = TYPO3.Neos:NodeUri {
					node = ${site}
					format = &amp;#39;rss&amp;#39;
					absolute = true
				}
			}
			@cache.mode = &amp;#39;embed&amp;#39;
		}
	}
	
	// ...
}
&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/martin-helmich/aab1c83379063d4beba5.js?file=Root.ts2&quot;&gt; &lt;/script&gt;

&lt;p&gt;Ich habe es mir in diesem Beispiel einfach gemacht, und als Ziel-Node des Links die &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;${site}&lt;/code&gt;-Node angegeben. Der Grund dafür ist, dass ich nur einen RSS-Feed für die ganze Seite haben möchte (technisch gesehen zwei, je einmal auf Deutsch und Englisch). Aber auch ein eigener Feed pro Seite ließe sich auf diese Weise einfach umsetzen.&lt;/p&gt;
</description>
        <pubDate>Wed, 15 Apr 2015 19:42:28 +0000</pubDate>
        <link>https://www.martin-helmich.de/de/blog/rss-feeds-mit-typo3-neos.html</link>
        <guid isPermaLink="true">https://www.martin-helmich.de/de/blog/rss-feeds-mit-typo3-neos.html</guid>
        
        <category>neos</category>
        
        
      </item>
    
  </channel>
</rss>
