<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>martin-helmich.de</title>
    <description>Mein privater Blog zur Softwareentwicklung und -architektur, Cloud-Technologien und anderen spannenden Themen.
</description>
    <link>https://www.martin-helmich.de/</link>
    <atom:link href="https://www.martin-helmich.de/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 03 May 2020 16:13:39 +0000</pubDate>
    <lastBuildDate>Sun, 03 May 2020 16:13:39 +0000</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>Well contained: Running TYPO3 in Docker</title>
        <description>&lt;p&gt;For the 10th edition of my book &lt;em&gt;Practical Knowledge in TYPO3&lt;/em&gt; (original title &lt;em&gt;Praxiswissen TYPO3&lt;/em&gt;) that is going to be released end of this month, I was looking for a way to offer readers an easy quickstart with TYPO3 - for all operating systems. The Windows installers that used to circulate among the TYPO3 community are hopelessly outdated and a from-scratch installation on unixoid operating systems also had its pitfalls.&lt;/p&gt;

&lt;p&gt;Since I’ve been working intensively with Docker and seeing as Docker offers an easy installation on all operating systems (thanks to the &lt;em&gt;Docker Toolbox&lt;/em&gt; or &lt;em&gt;Docker for Windows&lt;/em&gt;  and &lt;em&gt;Docker for macOS&lt;/em&gt;, respectively), I opted to build my own Docker image for TYPO3.&lt;/p&gt;

&lt;div class=&quot;my-alert row default-color-dark white-text z-depth-1&quot;&gt;
      &lt;div class=&quot;col-sm-12&quot;&gt;
        &lt;span class=&quot;icon&quot;&gt;
          &lt;i class=&quot;fa fa-lightbulb&quot;&gt;&lt;/i&gt;
        &lt;/span&gt;
        &lt;div class=&quot;my-alert-body&quot;&gt;
          &lt;strong&gt;Update &lt;/strong&gt; 
  Since I originally wrote this article in April 2016, I've also been building images for TYPO3 8.7, 9.5 and 10.4. This article has been updated where necessary to reflect this.

        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

&lt;h2 id=&quot;first-steps&quot;&gt;First steps&lt;/h2&gt;

&lt;p&gt;The TYPO3 image is available on &lt;a href=&quot;https://hub.docker.com/r/martinhelmich/typo3/&quot;&gt;Docker Hub by the repository name &lt;code&gt;martinhelmich/typo3&lt;/code&gt;&lt;/a&gt;. You can use the &lt;code&gt;docker pull&lt;/code&gt; command below to retrieve the current version of the image:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker pull martinhelmich/typo3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Furthermore, you can use the &lt;code&gt;docker pull&lt;/code&gt; command to download a specific version. For this, the repository offers the following tags:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;martinhelmich/typo3:6&lt;/code&gt; for the current 6.2 LTS version (&lt;strong&gt;CAUTION&lt;/strong&gt; no further updates available)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;martinhelmich/typo3:7&lt;/code&gt; for the current 7.6 LTS version (&lt;strong&gt;CAUTION&lt;/strong&gt; no further updates available)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;martinhelmich/typo3:8&lt;/code&gt; for the current 8.7 LTS version (&lt;strong&gt;CAUTION&lt;/strong&gt; no further updates available)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;martinhelmich/typo3:9&lt;/code&gt; for the current 9.5 LTS version&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;martinhelmich/typo3:10&lt;/code&gt; or &lt;code&gt;martinhelmich/typo3:latest&lt;/code&gt; for the current 10.4 LTS version&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please keep in mind that TYPO3 versions up until version 8 have already reached their designated end-of-life. This means that these versions will not receive any further updates (versions 7 and 8 still do still get updates if you pay for the Extended Long Term Support).&lt;/p&gt;

&lt;p&gt;The image only contains a web server with PHP. To follow Docker’s &lt;em&gt;“One container, one service”&lt;/em&gt; philosophy, the database management system should best be started in its own container, for example using the &lt;code&gt;mysql&lt;/code&gt; image:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run -d --name typo3-db \
    -e MYSQL_ROOT_PASSWORD=yoursupersecretpassword \
    -e MYSQL_USER=typo3 \
    -e MYSQL_PASSWORD=yourothersupersecretpassword \
    -e MYSQL_DATABASE=typo3 \
  mysql:5.7 \
    --character-set-server=utf8 \
    --collation-server=utf8_unicode_ci
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;my-alert row danger-color-dark white-text z-depth-1&quot;&gt;
      &lt;div class=&quot;col-sm-12&quot;&gt;
        &lt;span class=&quot;icon&quot;&gt;
          &lt;i class=&quot;fa fa-fire&quot;&gt;&lt;/i&gt;
        &lt;/span&gt;
        &lt;div class=&quot;my-alert-body&quot;&gt;
          &lt;strong&gt;Caution &lt;/strong&gt; 
  Remember to replace the password placeholders in the code snippets above with secure values!

        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

&lt;p&gt;Having a running database, you can start the actual application container:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run -d --name typo3-web \
    --link typo3-db:db \
    -p 80:80 \
  martinhelmich/typo3:10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After that, your TYPO3 installation can be reached at &lt;code&gt;http://localhost&lt;/code&gt; (in case you are using the Docker Toolbox on Windows or macOS, use the IP address of the Docker VM instead. You can determine this IP address by running the &lt;code&gt;docker-machine ip&lt;/code&gt; command).&lt;/p&gt;

&lt;p&gt;The TYPO3 running in the container is not fully installed, yet. This means that you will need to complete the Setup Wizard, first.&lt;/p&gt;

&lt;h2 id=&quot;production-deployment&quot;&gt;Production deployment&lt;/h2&gt;

&lt;p&gt;The practice described above is more than sufficient for a demonstration, testing or development. If you want to use the &lt;code&gt;martinhelmich/typo3&lt;/code&gt;image in production, there are a few more things that you should keep in mind.&lt;/p&gt;

&lt;p&gt;In production usage, it is especially important to worry about any kind of persistent data for your TYPO3 installation. The image already contains pre-configured volumes for the four directories&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;/var/www/html/fileadmin&lt;/li&gt;
  &lt;li&gt;/var/www/html/typo3conf&lt;/li&gt;
  &lt;li&gt;/var/www/html/typo3temp&lt;/li&gt;
  &lt;li&gt;/var/www/html/uploads&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These four directories usually store data that should be persistent. The &lt;code&gt;typo3temp/&lt;/code&gt; directory is a special case; the files within it are not particularly important, but TYPO3 will read and write intensively from/to this directory. For performance reasons, it usually is a good idea to create a volume for this directory.&lt;/p&gt;

&lt;p&gt;For storing persistent data, you can create a &lt;em&gt;data only&lt;/em&gt; container, first. This container will not be running, but is only used to contain the volumes for persistent data (which is why it might be a good idea to override the container’s &lt;code&gt;CMD&lt;/code&gt; with &lt;code&gt;/bin/true&lt;/code&gt;).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run --name typo3-data martinhelmich/typo3:10 /bin/true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The actual application container can then be started with the &lt;code&gt;--volumes-from&lt;/code&gt; flag:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run -d \
    --name typo3-web \
    --link typo3-db:db \
    --volumes-from typo3-data \
    -p 80:80 \
  martinhelmich/typo3:10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using this kind of setup, version updates and deployments will become easy, later. For this, simply delete the &lt;code&gt;typo3-web&lt;/code&gt; container. All the important persistent data will remain safely in their volumes managed by the &lt;code&gt;typo3-data&lt;/code&gt; container, and a new &lt;code&gt;typo3-web&lt;/code&gt; container can be created using the same way as before:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker rm -f typo3-web
$ docker pull martinhelmich/typo3:10
$ docker run --name typo3-web ...
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;under-the-hood&quot;&gt;Under the hood&lt;/h2&gt;

&lt;p&gt;The Dockerfiles used to build the images presented here can be found &lt;a href=&quot;https://github.com/martin-helmich/docker-typo3&quot;&gt;on GitHub&lt;/a&gt;. Suggestions in form of issues and pull requests are always welcome. All images are based on the &lt;a href=&quot;https://hub.docker.com/_/php/&quot;&gt;official &lt;code&gt;php&lt;/code&gt; image&lt;/a&gt; (more precisely, the &lt;code&gt;php:7.4-apache&lt;/code&gt; image) and contain all required PHP extensions required for running TYPO3.&lt;/p&gt;

</description>
        <pubDate>Sun, 03 May 2020 15:49:00 +0000</pubDate>
        <link>https://www.martin-helmich.de/en/blog/typo3-cms-docker.html</link>
        <guid isPermaLink="true">https://www.martin-helmich.de/en/blog/typo3-cms-docker.html</guid>
        
        <category>typo3</category>
        
        <category>docker</category>
        
        
      </item>
    
      <item>
        <title>Accessing Kubernetes CRDs from the client-go package</title>
        <description>&lt;p&gt;The Kubernetes API server is easily extendable by &lt;a href=&quot;https://kubernetes.io/docs/tasks/access-kubernetes-api/extend-api-custom-resource-definitions/&quot;&gt;Custom Resource Defintions&lt;/a&gt;. However, actually accessing these resources from the popular &lt;a href=&quot;https://github.com/kubernetes/client-go&quot;&gt;client-go&lt;/a&gt; library is a bit more complex and not thoroughly documented. This article contains a short guide on how to access Kubernetes CRDs from your own Go code (&lt;strong&gt;UPDATED 2020/04&lt;/strong&gt; to adjust to API changes in recent &lt;code&gt;client-go&lt;/code&gt; versions, using Go modules and doing (some) code generation with &lt;code&gt;controller-gen&lt;/code&gt;).&lt;/p&gt;

&lt;h2 id=&quot;motivation&quot;&gt;Motivation&lt;/h2&gt;

&lt;p&gt;I came across this challenge while wanting to integrate a third-party storage vendor into a Kubernetes cluster in my day job at &lt;a href=&quot;https://karriere.mittwald.de&quot;&gt;Mittwald&lt;/a&gt;. The plan was to use Custom Resource Definitions to define things like &lt;em&gt;Filesystem Pools&lt;/em&gt; and &lt;em&gt;Filesystems&lt;/em&gt;. Then, a custom Operator could listen for these resources being created and deleted and take care of the actual provisioning of these resources.&lt;/p&gt;

&lt;h2 id=&quot;defining-and-creating-a-custom-resource&quot;&gt;Defining and creating a Custom Resource&lt;/h2&gt;

&lt;p&gt;For this article, we’ll work with an easy example: Custom Resource Definitions can be easily created using &lt;code&gt;kubectl&lt;/code&gt;, and for this example, we will start with a single simple resource definition:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;apiextensions.k8s.io/v1beta1&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;CustomResourceDefinition&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;projects.example.martin-helmich.de&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;example.martin-helmich.de&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;v1alpha1&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Namespaced&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;plural&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;projects&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;singular&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;project&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Project&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13 &lt;/span&gt;  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;validation&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14 &lt;/span&gt;    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;openAPIV3Schema&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15 &lt;/span&gt;      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p p-Indicator&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;spec&amp;quot;&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16 &lt;/span&gt;      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17 &lt;/span&gt;        &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18 &lt;/span&gt;          &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p p-Indicator&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;replicas&amp;quot;&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19 &lt;/span&gt;          &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20 &lt;/span&gt;            &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;replicas&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21 &lt;/span&gt;              &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;integer&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22 &lt;/span&gt;              &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;minimum&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;For defining a Custom Resource Definition, you will need to think of an &lt;em&gt;API Group Name&lt;/em&gt; (in this case, &lt;code&gt;example.martin-helmich.de&lt;/code&gt;). By convention, this is usually the Domain Name of a domain that you control (for example, your organization’s domain) in order to prevent naming conflicts. The CRD’s name then follows the pattern &lt;code&gt;&amp;lt;plural-resource-name&amp;gt;.&amp;lt;api-group-name&amp;gt;&lt;/code&gt;, so in this case &lt;code&gt;projects.example.martin-helmich.de&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Also, be careful when choosing your definition version (&lt;code&gt;spec.version&lt;/code&gt; in the example above). As long as your definitions are still evolving, it’s usually a good idea to declare your first definition with an &lt;em&gt;alpha&lt;/em&gt; API group version. To users of your custom resource, this will clearly communicate that the definitions might still change, later.&lt;/p&gt;

&lt;p&gt;Often, you want to validate the data that users store in your custom resources against a certain schema. This is what the &lt;code&gt;spec.validation.openAPIV3Schema&lt;/code&gt; is for: This contains a &lt;a href=&quot;http://json-schema.org/&quot;&gt;JSON Schema&lt;/a&gt; that describes the format that your resources should have.&lt;/p&gt;

&lt;p&gt;After saving the CRD in a file, you can use &lt;code&gt;kubectl&lt;/code&gt; to create your resource definition:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt; kubectl apply -f projects-crd.yaml
&lt;span class=&quot;go&quot;&gt;customresourcedefinition &amp;quot;projects.example.martin-helmich.de&amp;quot; created&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After you have created your Custom Resource Definition, you can create instances of this new resource type. These are defined like regular Kubernetes objects (like, for example, Pods, Deployments and others). Only the &lt;code&gt;kind&lt;/code&gt; and &lt;code&gt;apiVersion&lt;/code&gt; vary:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt;1 &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;example.martin-helmich.de/v1alpha1&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2 &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Project&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3 &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4 &lt;/span&gt;  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;example-project&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5 &lt;/span&gt;  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;default&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;6 &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;7 &lt;/span&gt;  &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;replicas&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can create custom resources like any other object with &lt;code&gt;kubectl&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt; kubectl apply -f project.yaml
&lt;span class=&quot;go&quot;&gt;project &amp;quot;example-project&amp;quot; created&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can even use &lt;code&gt;kubectl get&lt;/code&gt; to retrieve your custom resources back from the Kubernetes API. Most other commands like &lt;code&gt;kubectl edit&lt;/code&gt;, &lt;code&gt;apply&lt;/code&gt; or &lt;code&gt;delete&lt;/code&gt; will work, as well:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt; kubectl get projects
&lt;span class=&quot;go&quot;&gt;NAME               AGE&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;example-project    2m&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;creating-a-golang-client&quot;&gt;Creating a Golang client&lt;/h2&gt;

&lt;p&gt;Next, we’ll use the &lt;a href=&quot;https://github.com/kubernetes/client-go&quot;&gt;client-go&lt;/a&gt; package to access these custom resources. For this example, I’ll assume that you are working in a Go project with the package name &lt;code&gt;github.com/martin-helmich/kubernetes-crd-example&lt;/code&gt; (yes, that repository &lt;a href=&quot;https://github.com/martin-helmich/kubernetes-crd-example&quot;&gt;actually exists&lt;/a&gt;) and have the &lt;code&gt;client-go&lt;/code&gt; and &lt;code&gt;apimachinery&lt;/code&gt; libraries installed as Go modules:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;go mod init github.com/martin-helmich/kubernetes-crd-example
go get k8s.io/client-go@v0.17.0
go get k8s.io/apimachinery@v0.17.0
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;my-alert row default-color-dark white-text z-depth-1&quot;&gt;
      &lt;div class=&quot;col-sm-12&quot;&gt;
        &lt;span class=&quot;icon&quot;&gt;
          &lt;i class=&quot;fa fa-lightbulb&quot;&gt;&lt;/i&gt;
        &lt;/span&gt;
        &lt;div class=&quot;my-alert-body&quot;&gt;
          &lt;strong&gt;Note &lt;/strong&gt; 
Many documentations working with CRDs will assume that you are working with some kind of code generation to generate client libraries automatically. However, this process is documented sparsely, and from reading a few heated discussions on Github, I got the impression that it's still very much a work-in-progress. We'll stick with a (mostly) manually implemented client, for now.

        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

&lt;h3 id=&quot;step-1-define-types&quot;&gt;Step 1: Define types&lt;/h3&gt;

&lt;p&gt;Start by defining the types for your custom resource. I’ve found it to be a good practice to organize these types by the API group version; for example, you could create a file &lt;code&gt;api/types/v1alpha1/project.go&lt;/code&gt; with the following contents:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;metav1&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/apimachinery/pkg/apis/meta/v1&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ProjectSpec&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;Replicas&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&amp;quot;replicas&amp;quot;`&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Project&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;	&lt;span class=&quot;nx&quot;&gt;metav1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TypeMeta&lt;/span&gt;   &lt;span class=&quot;s&quot;&gt;`json:&amp;quot;,inline&amp;quot;`&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;	&lt;span class=&quot;nx&quot;&gt;metav1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ObjectMeta&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&amp;quot;metadata,omitempty&amp;quot;`&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;Spec&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ProjectSpec&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&amp;quot;spec&amp;quot;`&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ProjectList&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17 &lt;/span&gt;	&lt;span class=&quot;nx&quot;&gt;metav1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TypeMeta&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&amp;quot;,inline&amp;quot;`&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18 &lt;/span&gt;	&lt;span class=&quot;nx&quot;&gt;metav1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ListMeta&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&amp;quot;metadata,omitempty&amp;quot;`&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20 &lt;/span&gt;	&lt;span class=&quot;nx&quot;&gt;Items&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Project&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&amp;quot;items&amp;quot;`&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The &lt;code&gt;metav1.ObjectMeta&lt;/code&gt; type contains the typical &lt;code&gt;metadata&lt;/code&gt; properties that you can find in any Kubernetes resource (like for example, the &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;namespace&lt;/code&gt;, &lt;code&gt;labels&lt;/code&gt; and &lt;code&gt;annotations&lt;/code&gt;).&lt;/p&gt;

&lt;h3 id=&quot;step-2-define-deepcopy-methods&quot;&gt;Step 2: Define DeepCopy methods&lt;/h3&gt;

&lt;p&gt;Each type that is being served by the Kubernetes API (in this case, &lt;code&gt;Project&lt;/code&gt; and &lt;code&gt;ProjectList&lt;/code&gt;) needs to implement the &lt;code&gt;k8s.io/apimachinery/pkg/runtime.Object&lt;/code&gt; interface. This interface defines the two methods &lt;code&gt;GetObjectKind()&lt;/code&gt; and &lt;code&gt;DeepCopyObject()&lt;/code&gt;. The first method is already provided by the embedded &lt;code&gt;metav1.TypeMeta&lt;/code&gt; struct; the second you’ll have to implement yourself.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;DeepCopyObject&lt;/code&gt; method is intended to generate a &lt;a href=&quot;https://en.wikipedia.org/wiki/Object_copying#Deep_copy&quot;&gt;deep copy&lt;/a&gt; of an object. Since this involves a lot of boilerplate code, these methods are often automatically generated. For the sake of this article, we’ll do it manually. Continue by adding a second file &lt;code&gt;deepcopy.go&lt;/code&gt; to the same package:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/apimachinery/pkg/runtime&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// DeepCopyInto copies all properties of this object into another object of the&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// same type that is provided as a pointer.&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DeepCopyInto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TypeMeta&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TypeMeta&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ObjectMeta&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ObjectMeta&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Spec&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ProjectSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Replicas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Spec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Replicas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15 &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// DeepCopyObject returns a generically typed copy of an object&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DeepCopyObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;runtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DeepCopyInto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;23 &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// DeepCopyObject returns a generically typed copy of an object&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;24 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ProjectList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DeepCopyObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;runtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;25 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ProjectList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;26 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TypeMeta&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TypeMeta&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;27 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ListMeta&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ListMeta&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;28 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;29 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;30 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Items&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([]&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;31 &lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;range&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Items&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;32 &lt;/span&gt;            &lt;span class=&quot;nx&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DeepCopyInto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;33 &lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;34 &lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;35 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;36 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;out&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;37 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;interlude-generate-the-deepcopy-methods-automatically&quot;&gt;Interlude: Generate the &lt;code&gt;DeepCopy&lt;/code&gt; methods automatically&lt;/h3&gt;

&lt;p&gt;OK - you may have already noticed that defining all these various &lt;code&gt;DeepCopy&lt;/code&gt; methods is not a lot of fun. There are many different tools and frameworks around to automatically generate these methods (all with very different levels of documentation and overall maturity). The one that I’ve found works best is the &lt;code&gt;controller-gen&lt;/code&gt; tool, which is part of the &lt;a href=&quot;https://github.com/kubernetes-sigs/kubebuilder&quot;&gt;Kubebuilder&lt;/a&gt; framework:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ go get -u github.com/kubernetes-sigs/controller-tools/cmd/controller-gen
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To use &lt;code&gt;controller-gen&lt;/code&gt;, annotate your CRD types with a &lt;code&gt;+k8s:deepcopy-gen&lt;/code&gt; annotation:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Project&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ProjectList&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then, run &lt;code&gt;controller-gen object paths=./api/types/v1alpha1/project.go&lt;/code&gt; to automatically generate the deepcopy methods.&lt;/p&gt;

&lt;p&gt;To make things even more easy, you could add a &lt;a href=&quot;https://blog.golang.org/generate&quot;&gt;&lt;code&gt;go:generate&lt;/code&gt; statement&lt;/a&gt; to the entire file:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;metav1&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/apimachinery/pkg/apis/meta/v1&amp;quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//go:generate controller-gen object paths=$GOFILE&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then, just run &lt;code&gt;go generate ./...&lt;/code&gt; in your root directory to update the generated code.&lt;/p&gt;

&lt;h3 id=&quot;step-3-register-types-at-the-scheme-builder&quot;&gt;Step 3: Register types at the scheme builder&lt;/h3&gt;

&lt;p&gt;Next, you’ll need to make your new types known to the client library. This will allow the client to (more or less) automatically process your new types when communicating with the API server.&lt;/p&gt;

&lt;p&gt;For this, add a new file &lt;code&gt;register.go&lt;/code&gt; to your package:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;metav1&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/apimachinery/pkg/apis/meta/v1&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/apimachinery/pkg/runtime&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/apimachinery/pkg/runtime/schema&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GroupName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;example.martin-helmich.de&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GroupVersion&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;v1alpha1&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SchemeGroupVersion&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GroupVersion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GroupName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GroupVersion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;SchemeBuilder&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;runtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NewSchemeBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addKnownTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;AddToScheme&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SchemeBuilder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AddToScheme&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;addKnownTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scheme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;runtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Scheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;scheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AddKnownTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SchemeGroupVersion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21 &lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22 &lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ProjectList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;23 &lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;24 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;25 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;metav1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AddToGroupVersion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SchemeGroupVersion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;26 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;27 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As you may notice, this code does not really do anything, yet (except for creating a new &lt;code&gt;runtime.SchemeBuilder&lt;/code&gt; instance).
The important part is the &lt;code&gt;AddToScheme&lt;/code&gt; function (line 16), which is an exported struct member of the &lt;code&gt;runtime.SchemeBuilder&lt;/code&gt; type created in line 15. You can call this function later from any part of your client code as soon as the Kubernetes client is initialized to register your type definitions.&lt;/p&gt;

&lt;h3 id=&quot;step-4-build-a-http-client&quot;&gt;Step 4: Build a HTTP client&lt;/h3&gt;

&lt;p&gt;After defining types and adding a method to register them at the global scheme builder, you can now create a HTTP client that is capable of loading your custom resource.&lt;/p&gt;

&lt;p&gt;For this, add the following code to your package’s &lt;code&gt;main.go&lt;/code&gt; file (for now):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;flag&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;log&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;time&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/apimachinery/pkg/runtime/schema&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/apimachinery/pkg/runtime/serializer&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;github.com/martin-helmich/kubernetes-crd-example/api/types/v1alpha1&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/client-go/kubernetes/scheme&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/client-go/rest&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/client-go/tools/clientcmd&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kubeconfig&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;StringVar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;kubeconfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;kubeconfig&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;path to Kubernetes config file&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;23 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;24 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;25 &lt;/span&gt;    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Config&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;26 &lt;/span&gt;    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;27 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;28 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kubeconfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;29 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;using in-cluster configuration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;30 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;InClusterConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;31 &lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;32 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;using configuration from &amp;#39;%s&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kubeconfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;33 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clientcmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BuildConfigFromFlags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kubeconfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;34 &lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;35 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;36 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;37 &lt;/span&gt;        &lt;span class=&quot;nb&quot;&gt;panic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;38 &lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;39 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;40 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AddToScheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Scheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;41 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;42 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;crdConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;43 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;crdConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ContentConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GroupVersion&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GroupVersion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GroupName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GroupVersion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;44 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;crdConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;APIPath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;/apis&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;45 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;crdConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NegotiatedSerializer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;serializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NewCodecFactory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Scheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;46 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;crdConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UserAgent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DefaultKubernetesUserAgent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;47 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;48 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;exampleRestClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UnversionedRESTClientFor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;crdConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;49 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;50 &lt;/span&gt;        &lt;span class=&quot;nb&quot;&gt;panic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;51 &lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;52 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can now use the &lt;code&gt;exampleRestClient&lt;/code&gt; created in line 48 to query all custom resources within the &lt;code&gt;example.martin-helmich.de/v1alpha1&lt;/code&gt; API group. An example might look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt;1 &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ProjectList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2 &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;exampleRestClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;Resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;projects&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;Do&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;6 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;Into&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In order to use your API in a more typesafe way, it is usually a good idea to wrap these operations within your own clientset. For this, create a new subpackage &lt;code&gt;clientset/v1alpha1&lt;/code&gt;. To start, implement an interface that defines the types of your API group and move the configuration setup from your &lt;code&gt;main&lt;/code&gt; method into that clientset’s constructor function (&lt;code&gt;NewForConfig&lt;/code&gt; in the example below):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;github.com/martin-helmich/kubernetes-crd-example/api/types/v1alpha1&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/apimachinery/pkg/runtime/schema&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/apimachinery/pkg/runtime/serializer&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/client-go/kubernetes/scheme&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/client-go/rest&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ExampleV1Alpha1Interface&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;Projects&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ProjectInterface&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;13 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ExampleV1Alpha1Client&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;restClient&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Interface&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NewForConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ExampleV1Alpha1Client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ContentConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GroupVersion&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GroupVersion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GroupName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GroupVersion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;APIPath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;/apis&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;23 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NegotiatedSerializer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Codecs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WithoutConversion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;24 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;UserAgent&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DefaultKubernetesUserAgent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;25 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;26 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RESTClientFor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;27 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;28 &lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;29 &lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;30 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;31 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ExampleV1Alpha1Client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;restClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;32 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;33 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;34 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ExampleV1Alpha1Client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Projects&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ProjectInterface&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;35 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;projectClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;36 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;restClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;restClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;37 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;ns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;38 &lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;39 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The code below will not compile yet, as it’s still missing the &lt;code&gt;ProjectInterface&lt;/code&gt; and &lt;code&gt;projectClient&lt;/code&gt; types. We’ll get to those in a moment.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;ExampleV1Alpha1Interface&lt;/code&gt; and its implementation, the &lt;code&gt;ExampleV1Alpha1Client&lt;/code&gt; struct are now the central point of entry for accessing your custom resources. You can now easily create a new clientset in your &lt;code&gt;main.go&lt;/code&gt; by simply calling &lt;code&gt;clientset, err := v1alpha1.NewForConfig(config)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Next, you’ll need to implement a specific clientset for accessing the &lt;code&gt;Project&lt;/code&gt; custom resource (note that the example above already uses the &lt;code&gt;ProjectInterface&lt;/code&gt; and &lt;code&gt;projectClient&lt;/code&gt; types that we still need to supply). Create a second file &lt;code&gt;projects.go&lt;/code&gt; in the same package:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;github.com/martin-helmich/kubernetes-crd-example/api/types/v1alpha1&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;metav1&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/apimachinery/pkg/apis/meta/v1&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/apimachinery/pkg/watch&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/client-go/kubernetes/scheme&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/client-go/rest&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ProjectInterface&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;opts&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;metav1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ListOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ProjectList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;metav1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GetOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;Watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;opts&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;metav1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ListOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16 &lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;projectClient&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;restClient&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Interface&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;ns&lt;/span&gt;         &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;23 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;24 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;projectClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;opts&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;metav1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ListOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ProjectList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;25 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ProjectList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;26 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;restClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;27 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;28 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Namespace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;29 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;projects&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;30 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;VersionedParams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ParameterCodec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;31 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Do&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;32 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Into&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;33 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;34 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;35 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;36 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;37 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;projectClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;opts&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;metav1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GetOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;38 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;39 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;restClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;40 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;41 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Namespace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;42 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;projects&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;43 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;44 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;VersionedParams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ParameterCodec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;45 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Do&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;46 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Into&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;47 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;48 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;49 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;50 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;51 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;projectClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;project&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;52 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;53 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;restClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;54 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;55 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Namespace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;56 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;projects&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;57 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;58 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Do&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;59 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Into&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;60 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;61 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;62 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;63 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;64 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;projectClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;opts&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;metav1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ListOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;65 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Watch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;66 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;restClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;67 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;68 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Namespace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;69 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;projects&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;70 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;VersionedParams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;opts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ParameterCodec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;71 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;Watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;72 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This client is obviously not yet complete and misses methods like &lt;code&gt;Delete&lt;/code&gt;, &lt;code&gt;Update&lt;/code&gt; and others. However, these can be implemented similar to the already existing methods. Have a look at the existing client sets (for example, the &lt;a href=&quot;https://github.com/kubernetes/client-go/blob/master/kubernetes/typed/core/v1/pod.go&quot;&gt;&lt;code&gt;Pod&lt;/code&gt; client set&lt;/a&gt;) for inspiration.&lt;/p&gt;

&lt;p&gt;After creating your client set, using it to list your existing resources becomes quite easy:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clientV1alpha1&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;github.com/martin-helmich/kubernetes-crd-example/clientset/v1alpha1&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;clientSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clientV1alpha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NewForConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;        &lt;span class=&quot;nb&quot;&gt;panic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;projects&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clientSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Projects&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;default&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;metav1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ListOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14 &lt;/span&gt;        &lt;span class=&quot;nb&quot;&gt;panic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15 &lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;fmt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;projects found: %+v\n&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;projects&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;step-5-build-an-informer&quot;&gt;Step 5: Build an informer&lt;/h3&gt;

&lt;p&gt;When building a Kubernetes Operator, you’ll typically want to be able to react on newly created or updated resources. In theory, you could just periodically call the &lt;code&gt;List()&lt;/code&gt; method and check if new resources were added. In practice, this is a sub-optimal solution, especially when you have lots of these resources.&lt;/p&gt;

&lt;p&gt;Most operators work by initially loading all relevant instances of a resource by using an initial &lt;code&gt;List()&lt;/code&gt; call, and then subscribing to updates using a &lt;code&gt;Watch()&lt;/code&gt; call. The initial object list and the updates received from the watch are then used to construct a local cache that allows quick access to any custom resources without having to hit the API server every time.&lt;/p&gt;

&lt;p&gt;This pattern is so common that the client-go library offers a helper for this: the &lt;em&gt;Informer&lt;/em&gt; from the &lt;code&gt;k8s.io/client-go/tools/cache&lt;/code&gt; package. You can construct a new Informer for your custom resource as follows:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;main&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;time&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;github.com/martin-helmich/kubernetes-crd-example/api/types/v1alpha1&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;client_v1alpha1&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;github.com/martin-helmich/kubernetes-crd-example/clientset/v1alpha1&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;metav1&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/apimachinery/pkg/apis/meta/v1&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/apimachinery/pkg/runtime&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/apimachinery/pkg/util/wait&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/apimachinery/pkg/watch&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;    &lt;span class=&quot;s&quot;&gt;&amp;quot;k8s.io/client-go/tools/cache&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15 &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;WatchResources&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientSet&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;client_v1alpha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ExampleV1Alpha1Interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Store&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16 &lt;/span&gt;    &lt;span class=&quot;nx&quot;&gt;projectStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;projectController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NewInformer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17 &lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ListWatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18 &lt;/span&gt;            &lt;span class=&quot;nx&quot;&gt;ListFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;metav1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ListOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;runtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19 &lt;/span&gt;                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clientSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Projects&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;some-namespace&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20 &lt;/span&gt;            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21 &lt;/span&gt;            &lt;span class=&quot;nx&quot;&gt;WatchFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;metav1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ListOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22 &lt;/span&gt;                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clientSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Projects&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;some-namespace&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;23 &lt;/span&gt;            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;24 &lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;25 &lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;26 &lt;/span&gt;        &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Minute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;27 &lt;/span&gt;        &lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ResourceEventHandlerFuncs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;28 &lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;29 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;30 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;projectController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NeverStop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;31 &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;projectStore&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;32 &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The &lt;code&gt;NewInformer&lt;/code&gt; method returns two objects: The second return value, the &lt;em&gt;controller&lt;/em&gt; controls the &lt;code&gt;List()&lt;/code&gt; and &lt;code&gt;Watch()&lt;/code&gt; calls and fills the first return value, the &lt;em&gt;store&lt;/em&gt; with a (more or less) recent cache of the watched resource’s state on the API server (in this case, the &lt;em&gt;project&lt;/em&gt; CRD).&lt;/p&gt;

&lt;p&gt;You can now use the &lt;em&gt;store&lt;/em&gt; to easily access your CRDs, either listing them all or accessing them by name. Keep in mind that the store functions return generic &lt;code&gt;interface{}&lt;/code&gt; types, so you’ll have to typecast them back to your CRD type:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt;1 &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;WatchResource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3 &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;project&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GetByKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;some-namespace/some-project&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;v1alpha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Project&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Building clients for Custom Resources is something that is (at least, currently) only sparsely documented and can be a bit tricky at times.&lt;/p&gt;

&lt;p&gt;A client library for your Custom Resource as shown in this article, along with a respective Informer is a good starting point for building your own Kubernetes operator that reacts on changes made to Custom Resources. Check the &lt;a href=&quot;https://github.com/martin-helmich/kubernetes-crd-example&quot;&gt;Github project for this article&lt;/a&gt; for a complete and working version.&lt;/p&gt;

</description>
        <pubDate>Wed, 15 Apr 2020 19:51:00 +0000</pubDate>
        <link>https://www.martin-helmich.de/en/blog/kubernetes-crd-client.html</link>
        <guid isPermaLink="true">https://www.martin-helmich.de/en/blog/kubernetes-crd-client.html</guid>
        
        <category>kubernetes</category>
        
        <category>docker</category>
        
        <category>golang</category>
        
        
      </item>
    
      <item>
        <title>Automation with Kubernetes operators</title>
        <description>&lt;p&gt;In the Kubernetes language, an &lt;em&gt;Operator&lt;/em&gt; is a piece of software that maps operational knowledge (hence the name) about the operation and installation of a specific program or system component in software and can thus automate it. Learn how to program such an operator yourself in Go using the Operator SDK.&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Feb 2020 19:00:00 +0000</pubDate>
        <link>https://www.martin-helmich.de/https:/jaxenter.de/kubernetes/automatisierung-kubernetes-operators-88189</link>
        <guid isPermaLink="true">https://www.martin-helmich.de/https:/jaxenter.de/kubernetes/automatisierung-kubernetes-operators-88189</guid>
        
        <category>kubernetes</category>
        
        <category>docker</category>
        
        <category>golang</category>
        
        
      </item>
    
      <item>
        <title>Automatisierung mit Kubernetes Operators</title>
        <description>&lt;p&gt;In der Kubernetes-Sprache ist ein Operator ein Stück Software, das operatives Wissen (daher der Name) über Betrieb und Installation eines bestimmten Programms oder einer Systemkomponente seinerseits in Software abbildet und damit automatisieren kann. Dieser Artikel zeigt, wie ihr einen solchen Operator mithilfe des Operator SDKs selbst in Go programmieren könnt.&lt;/p&gt;
</description>
        <pubDate>Tue, 04 Feb 2020 19:00:00 +0000</pubDate>
        <link>https://www.martin-helmich.de/https:/jaxenter.de/kubernetes/automatisierung-kubernetes-operators-88189</link>
        <guid isPermaLink="true">https://www.martin-helmich.de/https:/jaxenter.de/kubernetes/automatisierung-kubernetes-operators-88189</guid>
        
        <category>kubernetes</category>
        
        <category>docker</category>
        
        <category>golang</category>
        
        
      </item>
    
      <item>
        <title>Gut eingepackt: TYPO3 CMS in Docker betreiben</title>
        <description>&lt;p&gt;Für die 10. Auflage des Buchs &lt;em&gt;Praxiswissen TYPO3&lt;/em&gt; (welches Ende diesen Monats im O’Reilly-Verlag erscheint), suchte ich nach einer Möglichkeit, allen Lesern einen schnellen Start mit TYPO3 zu ermöglichen - und das unter allen Betriebssystemen gleichermaßen. Die Windows-Installer, die früher in der TYPO3-Community kursierten, sind mittlerweile hoffnungslos veraltet und auch die manuelle Installation auf unixoiden Systemen war nichts für jeden.&lt;/p&gt;

&lt;p&gt;Da ich mittlerweile sehr intensiv mit Docker arbeite und Docker über die Docker Toolbox (bzw. &lt;em&gt;Docker for Windows&lt;/em&gt; und &lt;em&gt;Docker for macOS&lt;/em&gt;) auch unter Windows und MacOS gut von Einsteigern benutzbar ist, beschloss ich ein entsprechendes Docker-Image zu entwickeln.&lt;/p&gt;

&lt;div class=&quot;my-alert row default-color-dark white-text z-depth-1&quot;&gt;
      &lt;div class=&quot;col-sm-12&quot;&gt;
        &lt;span class=&quot;icon&quot;&gt;
          &lt;i class=&quot;fa fa-lightbulb&quot;&gt;&lt;/i&gt;
        &lt;/span&gt;
        &lt;div class=&quot;my-alert-body&quot;&gt;
          &lt;strong&gt;Update &lt;/strong&gt; 
  Seitdem ich diesen Artikel ursprünglich im April 2016 geschrieben habe, stehen weiterhin auch Images für TYPO3 8.7, 9.5 und 10.4 zur Verfügung. Dieser Artikel wurde an den entsprechenden Stellen wo nötig aktualisiert.

        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

&lt;h2 id=&quot;erste-schritte&quot;&gt;Erste Schritte&lt;/h2&gt;

&lt;p&gt;Das TYPO3-Image steht im &lt;a href=&quot;https://hub.docker.com/r/martinhelmich/typo3/&quot;&gt;Docker-Hub unter dem Repository-Namen &lt;code&gt;martinhelmich/typo3&lt;/code&gt;&lt;/a&gt; zur Verfügung. Mit untenstehendem &lt;code&gt;docker pull&lt;/code&gt;-Befehl kann die jeweils aktuellste Version des Images bezogen werden:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker pull martinhelmich/typo3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Darüber hinaus kann beim Pull auch eine spezielle Version herunter geladen werden. Hierzu bietet das Repository die folgenden Tags an:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;martinhelmich/typo3:6&lt;/code&gt; für die jeweils aktuellste 6.2 LTS-Version (&lt;strong&gt;ACHTUNG&lt;/strong&gt;: Keine neuen Versionen mehr!)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;martinhelmich/typo3:7&lt;/code&gt; für die jeweils aktuellste 7.6 LTS-Version (&lt;strong&gt;ACHTUNG&lt;/strong&gt;: Keine neuen Versionen mehr!)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;martinhelmich/typo3:8&lt;/code&gt; für die jeweils aktuellste 8.7 LTS-Version (&lt;strong&gt;ACHTUNG&lt;/strong&gt;: Keine neuen Versionen mehr!)&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;martinhelmich/typo3:9&lt;/code&gt; für die jeweils aktuellste 9.5 LTS-Version&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;martinhelmich/typo3:10&lt;/code&gt; oder &lt;code&gt;martinhelmich/typo3:latest&lt;/code&gt; für die aktuellste 10.4 LTS-Version&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Beachtet jedoch, dass die TYPO3-Versionen bis einschließlich 8 bereits das Ende ihres Support-Zeitraums erreicht haben. Dies bedeutet, dass für diese Versionen keine weiteren Updates (bzw. für TYPO3 7 und 8 nur noch im Rahmen des kostenpflichtigen Extended Support) veröffentlicht werden.&lt;/p&gt;

&lt;p&gt;Das Image enthält lediglich eine PHP-FPM-Umgebung mit einem Webserver. Um die “Ein Container, eine Anwendung”-Philosophie von Docker zu befolgen, sollte für das Datenbanksystem folglich am besten ein eigener Container gestartet werden, wie hier beispielsweise ein MySQL-Container:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run -d --name typo3-db \
    -e MYSQL_ROOT_PASSWORD=yoursupersecretpassword \
    -e MYSQL_USER=typo3 \
    -e MYSQL_PASSWORD=yourothersupersecretpassword \
    -e MYSQL_DATABASE=typo3 \
  mysql:5.7 \
    --character-set-server=utf8 \
    --collation-server=utf8_unicode_ci
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;my-alert row danger-color-dark white-text z-depth-1&quot;&gt;
      &lt;div class=&quot;col-sm-12&quot;&gt;
        &lt;span class=&quot;icon&quot;&gt;
          &lt;i class=&quot;fa fa-fire&quot;&gt;&lt;/i&gt;
        &lt;/span&gt;
        &lt;div class=&quot;my-alert-body&quot;&gt;
          &lt;strong&gt;Achtung &lt;/strong&gt; 
  Denkt daran, die Passwort-Platzhalter im obigen Code-Beispielen mit sicheren Werten zu ersetzen!

        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

&lt;p&gt;Danach kann der eigentliche Applikationscontainer gestartet werden:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run -d --name typo3-web \
    --link typo3-db:db \
    -p 80:80 \
  martinhelmich/typo3:10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Im Anschluss ist die laufende TYPO3-Installation unter &lt;code&gt;http://localhost&lt;/code&gt; erreichbar (falls ihr die Docker Toolbox unter Windows oder MacOS nutzt, nutzt stattdessen die IP-Adresse der virtuellen Maschine, die ihr mit &lt;code&gt;docker-machine ip&lt;/code&gt; herausfinden könnt).&lt;/p&gt;

&lt;p&gt;Das im Container laufende TYPO3 ist noch nicht fertig installiert; dies bedeutet, dass ihr euch zunächst noch durch den Installationsassistenten durchklicken müsst.&lt;/p&gt;

&lt;h2 id=&quot;produktiv-deployment&quot;&gt;Produktiv-Deployment&lt;/h2&gt;

&lt;p&gt;Das oben beschriebene Vorgehen ist für eine Demonstration, zum Ausprobieren oder Entwickeln vollkommen ausreichend. Falls ihr das &lt;code&gt;martinhelmich/typo3&lt;/code&gt;-Dockerimage im Produktivbetrieb einsetzen möchtet, sollten ein paar weitere Vorkehrungen getroffen werden.&lt;/p&gt;

&lt;p&gt;Im Produktivbetrieb ist es besonders wichtig, sich um die Nutzdaten der TYPO3-Installation Gedanken zu machen. Das Image enthält bereits fertig vorkonfigurierte Volumes für die vier Verzeichnisse&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;/var/www/html/fileadmin&lt;/li&gt;
  &lt;li&gt;/var/www/html/typo3conf&lt;/li&gt;
  &lt;li&gt;/var/www/html/typo3temp&lt;/li&gt;
  &lt;li&gt;/var/www/html/uploads&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Diese vier Verzeichnisse enthalten im Regelfall Nutzdaten, die nicht verloren gehen sollten. Das &lt;code&gt;typo3temp/&lt;/code&gt;-Verzeichnis ist ein Sonderfall. Die Daten hierin sind zwar nicht besonders wichtig, da in diesem Verzeichnis jedoch besonders viel geschrieben und gelesen wird, ist es aus Gründen der Performance ratsam, dieses Verzeichnis als Volume zu erstellen.&lt;/p&gt;

&lt;p&gt;Zur Haltung der Nutzdaten kann nun als erstes ein &lt;em&gt;Data-Only&lt;/em&gt;-Container erstellt werden. Dieser wird später nicht laufen (daher empfiehlt es sich sogar, das CMD des Containers mit &lt;code&gt;/bin/true&lt;/code&gt; zu überschreiben), sondern wird lediglich die Volumes mit Nutzdaten beinhalten:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run --name typo3-data martinhelmich/typo3:10 /bin/true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Der eigentliche Applikationscontainer kann dann mit dem &lt;code&gt;--volumes-from&lt;/code&gt;-Flag gestartet werden:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run -d \
    --name typo3-web \
    --link typo3-db:db \
    --volumes-from typo3-data \
    -p 80:80 \
  martinhelmich/typo3:10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Auf diese Weise sind sogar später einfache Versionsupdates und Deployments möglich. Hierzu kann der &lt;code&gt;typo3-web&lt;/code&gt;-Container einfach gelöscht werden; die wichtigen Nutzdaten bleiben in den Volumes des &lt;code&gt;typo3-data&lt;/code&gt;-Containers erhalten und ein neuer &lt;code&gt;typo3-web&lt;/code&gt;-Container kann mit denselben Daten erstellt werden:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker rm -f typo3-web
$ docker pull martinhelmich/typo3:10
$ docker run --name typo3-web ...
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;unter-der-haube&quot;&gt;Unter der Haube&lt;/h2&gt;

&lt;p&gt;Die Dockerfiles des hier vorgestellten Images finden sich &lt;a href=&quot;https://github.com/martin-helmich/docker-typo3&quot;&gt;auf Github&lt;/a&gt;. Anregungen in Form von Issues und Pull Requests sind stets willkommen. Alle Images basieren auf dem &lt;a href=&quot;https://hub.docker.com/_/php/&quot;&gt;offiziellen &lt;code&gt;php&lt;/code&gt;-Image&lt;/a&gt; (genauer gesagt, dem &lt;code&gt;php:7.4-apache&lt;/code&gt;-Image) und enthalten alle notwendigen PHP-Extensions, die zum Betrieb von TYPO3 benötigt werden.&lt;/p&gt;

</description>
        <pubDate>Fri, 22 Mar 2019 16:25:28 +0000</pubDate>
        <link>https://www.martin-helmich.de/de/blog/typo3-cms-docker.html</link>
        <guid isPermaLink="true">https://www.martin-helmich.de/de/blog/typo3-cms-docker.html</guid>
        
        <category>typo3</category>
        
        <category>docker</category>
        
        
      </item>
    
      <item>
        <title>Kubernetes-CRDs über die client-go-Bibliothek auslesen</title>
        <description>&lt;p&gt;Der Kubernetes-API-Server kann einfach über &lt;a href=&quot;https://kubernetes.io/docs/tasks/access-kubernetes-api/extend-api-custom-resource-definitions/&quot;&gt;Custom Resource Definitions&lt;/a&gt; erweitert werden. Der Zugriff auf solche Ressources über die weitverbreitete &lt;a href=&quot;https://github.com/kubernetes/client-go&quot;&gt;client-go&lt;/a&gt;-Bibliothek ist allerdings ein wenig komplexer und nicht sehr gründlich dokumentiert. Dieser Artikel enthält eine kurze Einführung, wie ihr auf Kubernetes-CRDs aus eurem eigenen Go-Code heraus zugreifen könnt.&lt;/p&gt;

</description>
        <pubDate>Wed, 28 Mar 2018 19:00:00 +0000</pubDate>
        <link>https://www.martin-helmich.de/en/blog/kubernetes-crd-client.html</link>
        <guid isPermaLink="true">https://www.martin-helmich.de/en/blog/kubernetes-crd-client.html</guid>
        
        <category>kubernetes</category>
        
        <category>docker</category>
        
        <category>golang</category>
        
        
      </item>
    
      <item>
        <title>Code quality in TYPO3 projects</title>
        <description>&lt;p&gt;A while ago I wrote a &lt;a href=&quot;https://github.com/martin-helmich/typo3-typoscript-lint&quot;&gt;small tool for analyzing code quality in TypoScript files&lt;/a&gt; (originally as part of a larger &lt;a href=&quot;https://t3n.de/magazin/continuous-integration-typo3-236672/&quot;&gt;article for the t3n magazine&lt;/a&gt;) that since then has achieved a bit of popularity in the TYPO3 community. This article contains an updated write-up on the tool and a short guide on how to use it.&lt;/p&gt;

&lt;script src=&quot;https://asciinema.org/a/1jOJv3Z6onWSdIkTAxAWsGgoy.js&quot; id=&quot;asciicast-1jOJv3Z6onWSdIkTAxAWsGgoy&quot; async=&quot;&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;what-is-a-linter&quot;&gt;What is a linter?&lt;/h2&gt;

&lt;p&gt;The term “linting” dates back to the UNIX tool &lt;em&gt;lint&lt;/em&gt;, which was originally intended find programming errors in C source code. By now, a “linter” is commonly understood as a tool to detect and report errors (including stylistic errors) in program source codes (source: &lt;a href=&quot;https://en.wikipedia.org/wiki/Lint_(software)&quot;&gt;Wikipedia&lt;/a&gt;). Linters help developers to keep a consistent coding style in projects and to find potential errors as early as possible using static code analysis.&lt;/p&gt;

&lt;p&gt;There are linters for lots of different programming languages; web developers may have stumbled upon &lt;a href=&quot;http://jslint.com/&quot;&gt;JSLint&lt;/a&gt;, &lt;a href=&quot;http://csslint.net/&quot;&gt;CSSLint&lt;/a&gt; or &lt;a href=&quot;http://htmlhint.com/&quot;&gt;HTMLLint&lt;/a&gt;. A new addition to this list is now &lt;a href=&quot;https://github.com/martin-helmich/typo3-typoscript-lint&quot;&gt;TypoScript Lint&lt;/a&gt; that offers similar features for TypoScript, a language customarily used in TYPO3 projects. As a small example, let’s have a look at the following TypoScript snippet:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typoscript&quot; data-lang=&quot;typoscript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PAGE&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;page&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FLUIDTEMPLATE&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;    templateName &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Default
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;    templateRootPaths&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fileadmin/templates&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;   templateRootPaths&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;EXT:mysite/Resources/Private/Templates&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;    layoutRootPaths &lt;span class=&quot;ss&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;    &lt;span class=&quot;ss&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14 &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#page.includeJS.main = fileadmin/js/app.js&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15 &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;includeJS&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;main &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fileadmin/js/app.min.js&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17 &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;templateRootPaths&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fileadmin/templates2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;There are some obvious stylistic errors in this code snipped (ordered by severity):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The property &lt;code&gt;page.10.templateRootPaths.10&lt;/code&gt; is assigned in line 6. However, the exact same property is overwritten in line 17. This is a dangerous pitfall: an unsuspecting developer might now change line 6 in good faith, without this having any effect - an error that will cost a lot of valuable time to debug.&lt;/li&gt;
  &lt;li&gt;After the first assignment block to &lt;code&gt;page&lt;/code&gt; has been closed, there are subsequent assignments to sub-properties of &lt;code&gt;page&lt;/code&gt; in lines 15 and 17. These might be surprising, since someone reading the source code might not expect these assignments after the initial assignment block.&lt;/li&gt;
  &lt;li&gt;The comment in line 14 apparently contains source code that was commented out. This obstructs readability and should be removed completely. This is what version control is for!&lt;/li&gt;
  &lt;li&gt;Indentation is not consistent. The &lt;code&gt;10&lt;/code&gt;s in lines 3 and 4 should be indented equally, but aren’t. Same goes for line 7. Especially in larger files, inconsistent indentation can reduce code readability hugely.&lt;/li&gt;
  &lt;li&gt;The assignments to &lt;code&gt;templateRootPaths&lt;/code&gt; in lines 6 and 7 start with the same path segment. For better readability, these two assignments could be grouped in a single assignment block.&lt;/li&gt;
  &lt;li&gt;The assignment to &lt;code&gt;layoutRootPaths&lt;/code&gt; in line 9 and 10 is completely empty.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And indeed, when passed an input file with the content seen above, the TypoScript linter generates the following output, that admonished all stated errors (and even a few more):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;Completed with 8 issues

CHECKSTYLE REPORT
=&amp;gt; /Users/mhelmich/Git/Github/typo3-ci-example/test.typoscript.
   2 Accessor should be followed by single space.
   4 Expected indent of 2 spaces.
   6 Value of object &quot;page.10.templateRootPaths.10&quot; is overwritten in line 17.
   6 Common path prefix &quot;templateRootPaths&quot; with assignment to &quot;templateRootPaths.20&quot; in line 7. Consider merging them into a nested assignment.
   7 Expected indent of 4 spaces.
   7 Common path prefix &quot;templateRootPaths&quot; with assignment to &quot;templateRootPaths.10&quot; in line 6. Consider merging them into a nested assignment.
   9 Empty assignment block
  14 Found commented code (page.includeJS.main = fileadmin/js/app.js).
  15 Assignment to value &quot;page.includeJS.main&quot;, altough nested statement for path &quot;page&quot; exists at line 2.
  17 Assignment to value &quot;page.10.templateRootPaths.10&quot;, altough nested statement for path &quot;page&quot; exists at line 2.
  17 Common path prefix &quot;page&quot; with assignment to &quot;page.includeJS.main&quot; in line 15. Consider merging them into a nested assignment.

SUMMARY
12 issues in total. (11 warnings, 1 infos)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A complete list of coding errors that are detected by the TypoScript linter can be found in the &lt;a href=&quot;https://github.com/martin-helmich/typo3-typoscript-lint#features&quot;&gt;project’s README file&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;p&gt;The TypoScript linter is installed via &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt;. Of course, this works best if the TYPO3 project in which the linter should be used is itself also managed with Composer (for setting up TYPO3 with Composer, I’ll just link to the &lt;a href=&quot;https://github.com/TYPO3/TYPO3.CMS.BaseDistribution&quot;&gt;respective README file&lt;/a&gt;). In this case, a simple &lt;code&gt;composer require --dev&lt;/code&gt; command in the project directory is sufficient:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt; composer require --dev helmich/typo3-typoscript-lint
&lt;span class=&quot;go&quot;&gt;Using version ^1.4 for helmich/typo3-typoscript-lint&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;./composer.json has been updated&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Loading composer repositories with package information&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Updating dependencies (including require-dev)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Package operations: 7 installs, 0 updates, 0 removals&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/filesystem (v4.0.3): Downloading (100%)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/config (v4.0.3): Downloading (100%)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing psr/container (1.0.0): Downloading (100%)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/dependency-injection (v4.0.3): Downloading (100%)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing helmich/typo3-typoscript-parser (v1.1.2): Downloading (100%)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/event-dispatcher (v4.0.3): Downloading (100%)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing helmich/typo3-typoscript-lint (v1.4.4): Downloading (100%)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Writing lock file&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Generating autoload files&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Generating  class alias map file&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Inserting class alias loader into main autoload.php file&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The &lt;code&gt;--dev&lt;/code&gt; flag asserts that the linter is not installed when the project is deployed on a production system. After installation, the linter is available in the &lt;code&gt;vendor/bin&lt;/code&gt; directory and can be called with &lt;code&gt;vendor/bin/typoscript-lint&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If your TYPO3 project is not managed with Composer, you can use the &lt;code&gt;composer global&lt;/code&gt; command to install the linter globally. In this case, the linter is available not in your project directory, but in your user’s home directory; more precisely, &lt;code&gt;$HOME/.composer/vendor/bin/typoscript-lint&lt;/code&gt; (if you add the &lt;code&gt;$HOME/.composer/vendor/bin&lt;/code&gt; directory to your shell’s search path, a simple &lt;code&gt;typoscript-lint&lt;/code&gt; will be sufficient for calling the linter).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt; composer global require helmich/typo3-typoscript-lint
&lt;span class=&quot;go&quot;&gt;Changed current directory to /Users/mhelmich/.composer&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Using version ^1.4 for helmich/typo3-typoscript-lint&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;./composer.json has been created&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Loading composer repositories with package information&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Updating dependencies (including require-dev)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Package operations: 11 installs, 0 updates, 0 removals&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/yaml (v4.0.3): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/filesystem (v4.0.3): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/config (v4.0.3): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing psr/container (1.0.0): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/dependency-injection (v4.0.3): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing helmich/typo3-typoscript-parser (v1.1.2): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/event-dispatcher (v4.0.3): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/finder (v4.0.3): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/polyfill-mbstring (v1.6.0): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/console (v4.0.3): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing helmich/typo3-typoscript-lint (v1.4.4): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Writing lock file&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Generating autoload files&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;p&gt;After the installation, &lt;code&gt;typoscript-lint&lt;/code&gt; can be called on arbitraty TypoScript files. These files will be analyzed and the linter will point out coding and style errors in the source code. The tool’s output might look as follows:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/typoscript-lint-output.png&quot; alt=&quot;Output of `typoscript-lint`&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Using the options &lt;code&gt;-f xml&lt;/code&gt; and &lt;code&gt;-o outputfile.xml&lt;/code&gt;, you can create an XML output file that is compatible to the popular &lt;a href=&quot;http://checkstyle.sourceforge.net/&quot;&gt;Checkstyle format&lt;/a&gt;. This way, you can easily integrate the TypoScript linter in &lt;em&gt;Continuous Integration&lt;/em&gt; environments like Jenkins (for which there exists a &lt;a href=&quot;https://wiki.jenkins.io/display/JENKINS/Checkstyle+Plugin&quot;&gt;plugin for Checkstyle&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;/h2&gt;

&lt;p&gt;Style in programming languages is often subjective and a matter of personal taste (best example probably being the &lt;a href=&quot;https://www.youtube.com/watch?v=SsoOG6ZeyUI&quot;&gt;“Tabs or Spaces?”&lt;/a&gt; question). Of course, the TypoScript linter can be adjusted to these kinds of preferences. For this, a configuration file called &lt;code&gt;typoscript-lint.yml&lt;/code&gt; needs to be created in your project directory (earlier versions of the liter used &lt;code&gt;tslint.yml&lt;/code&gt; as file name, which lead to &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;obvious problems&lt;/a&gt;). In this file, you can for example configure the indentation (here, for using tabs for indentation instead of spaces):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt;1 &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;sniffs&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2 &lt;/span&gt;  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;Indentation&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3 &lt;/span&gt;    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4 &lt;/span&gt;      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;useSpaces&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5 &lt;/span&gt;      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;indentPerLevel&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can also deactivate individual checks. For example, if the recommendations for nesting assignments annoy you, they can be easily disabled:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt;1 &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;sniffs&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2 &lt;/span&gt;  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;NestingConsistency&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3 &lt;/span&gt;    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;disabled&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;questions--feedback&quot;&gt;Questions &amp;amp; feedback?&lt;/h2&gt;

&lt;p&gt;The TypoScript linter is &lt;a href=&quot;https://github.com/martin-helmich/typo3-typoscript-lint&quot;&gt;available on GitHub&lt;/a&gt; and licensed under the MIT license. If you should notice errors while using the linter, feel free to use the &lt;a href=&quot;https://github.com/martin-helmich/typo3-typoscript-lint/issues&quot;&gt;issue tracker on GitHub&lt;/a&gt; or open up a Pull Request if you want to fix a bug or make a change to the linter by yourself.&lt;/p&gt;

</description>
        <pubDate>Thu, 18 Jan 2018 20:45:00 +0000</pubDate>
        <link>https://www.martin-helmich.de/en/blog/codequality-typo3.html</link>
        <guid isPermaLink="true">https://www.martin-helmich.de/en/blog/codequality-typo3.html</guid>
        
        <category>typo3</category>
        
        
      </item>
    
      <item>
        <title>Codequalität in TYPO3-Projekten</title>
        <description>&lt;p&gt;Vor einiger Zeit schrieb ich (ursprünglich als Teil eines größeren &lt;a href=&quot;https://t3n.de/magazin/continuous-integration-typo3-236672/&quot;&gt;Artikels für das t3n-Magazin&lt;/a&gt;) ein &lt;a href=&quot;https://github.com/martin-helmich/typo3-typoscript-lint&quot;&gt;kleines Tool zur Analyse der Codequalität in TypoScript-Dateien&lt;/a&gt;, welches sich auch nach einigen Jahren noch einer gewissen Beliebtheit erfreut. Aus diesem Grund gibt es hier noch einmal eine kurze Zusammenfassung und einen Überblick über die Benutzung.&lt;/p&gt;

&lt;script src=&quot;https://asciinema.org/a/1jOJv3Z6onWSdIkTAxAWsGgoy.js&quot; id=&quot;asciicast-1jOJv3Z6onWSdIkTAxAWsGgoy&quot; async=&quot;&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;was-ist-ein-linter&quot;&gt;Was ist ein Linter?&lt;/h2&gt;

&lt;p&gt;Der Begriff des “Lintings” geht auf das betagte Unix-Tool &lt;em&gt;lint&lt;/em&gt; zurück. Dieses diente ursprünglich dazu, Programmierfehler in C-Quelltexten zu finden. Mittlerweile versteht man unter einem “Linter” ein Tool, das Fehler (einschließlich stilistischer Fehler) in Programmquelltexten erkennt und meldet (Quelle: &lt;a href=&quot;https://en.wikipedia.org/wiki/Lint_(software)&quot;&gt;Wikipedia&lt;/a&gt;). Linter helfen Entwicklern, in Projekten einen einheitlichen Programmierstil einzuhalten, und mögliche Fehler möglichst früh durch statische Codeanalyse zu erkennen.&lt;/p&gt;

&lt;p&gt;Linter gibt es für alle möglichen Programmiersprachen; Web-Entwickler kennen womöglich &lt;a href=&quot;http://jslint.com/&quot;&gt;JSLint&lt;/a&gt;, &lt;a href=&quot;http://csslint.net/&quot;&gt;CSSLint&lt;/a&gt; oder &lt;a href=&quot;http://htmlhint.com/&quot;&gt;HTMLLint&lt;/a&gt;. In diese Liste reiht sich nun auch &lt;a href=&quot;https://github.com/martin-helmich/typo3-typoscript-lint&quot;&gt;TypoScript Lint&lt;/a&gt; ein, welches ähnliche Funktionen für das in TYPO3-Projekten gebräuchliche TypoScript anbietet. Als kleines Beispiel sei folgender TypoScript-Quelltext betrachtet:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-typoscript&quot; data-lang=&quot;typoscript&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PAGE&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;page&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FLUIDTEMPLATE&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;    templateName &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Default
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;    templateRootPaths&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fileadmin/templates&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;   templateRootPaths&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;EXT:mysite/Resources/Private/Templates&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;    layoutRootPaths &lt;span class=&quot;ss&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;    &lt;span class=&quot;ss&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14 &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#page.includeJS.main = fileadmin/js/app.js&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15 &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;includeJS&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;main &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fileadmin/js/app.min.js&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17 &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;templateRootPaths&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fileadmin/templates2&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In diesem Code-Abschnitt gibt es einige offensichtliche stilistische Punkte zu bemängeln (sortiert nach Schwere):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In Zeile 6 wird die Eigenschaft &lt;code&gt;page.10.templateRootPaths.10&lt;/code&gt; zugewiesen. Allerdings wird genau diese Eigenschaft in Zeile 17 wieder überschrieben. Dies ist eine gefährliche Falle: Ein unbedachter Entwickler könnte nun im guten Glauben Zeile 6 verändern, ohne dass dies irgendeine Auswirkung hätte – ein Fehler, den zu debuggen dann im Anschluss wertvolle Zeit kosten würde.&lt;/li&gt;
  &lt;li&gt;Nachdem der erste Zuweisungsblock zu &lt;code&gt;page&lt;/code&gt; geschlossen wurde, folgt noch eine zweite Zuweisung zu einem Unterobjekt von &lt;code&gt;page&lt;/code&gt;. Dies könnte überraschen, da ein Leser des Quelltextes nicht unbedingt damit rechnet, dass nach dem Zuweisungsblock noch einzelne Unterattribute des &lt;code&gt;page&lt;/code&gt;-Objekts zugewiesen werden.&lt;/li&gt;
  &lt;li&gt;Die Kommentarzeile in Zeile 14 enthält offensichtlich auskommentierten Code. Dieser stört die Lesbarkeit und sollte komplett entfernt werden. Dafür gibt es ja schließlich Versionsverwaltung!&lt;/li&gt;
  &lt;li&gt;Die Einrückung der Datei ist nicht konsistent. Die &lt;code&gt;10&lt;/code&gt; in den Zeilen 3 und 4 sollten gleich weit eingerückt sein, sind es aber nicht. Gleiches gilt in Zeile 7. Gerade in größeren Dateien können solche Einrückungsfehler der Lesbarkeit des Quelltextes enorm schaden.&lt;/li&gt;
  &lt;li&gt;Die Zuweisungen zu &lt;code&gt;templateRootPaths&lt;/code&gt; in den Zeilen 6 und 7 beginnen mit demselben Pfad-Segment. Zur besseren Lesbarkeit könnten diese beiden Zuweisungen in einen Block ausgelagert werden.&lt;/li&gt;
  &lt;li&gt;Die Zuweisung zu &lt;code&gt;layoutRootPaths&lt;/code&gt; ist komplett leer.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Und tatsächlich generiert der TypoScript-Linter bei einer Eingabedatei mit obigem Inhalt folgende Ausgabe, welche alle oben angemerkten Fehler (und sogar noch ein paar mehr) ankreidet:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;Completed with 8 issues

CHECKSTYLE REPORT
=&amp;gt; /Users/mhelmich/Git/Github/typo3-ci-example/test.typoscript.
   2 Accessor should be followed by single space.
   4 Expected indent of 2 spaces.
   6 Value of object &quot;page.10.templateRootPaths.10&quot; is overwritten in line 17.
   6 Common path prefix &quot;templateRootPaths&quot; with assignment to &quot;templateRootPaths.20&quot; in line 7. Consider merging them into a nested assignment.
   7 Expected indent of 4 spaces.
   7 Common path prefix &quot;templateRootPaths&quot; with assignment to &quot;templateRootPaths.10&quot; in line 6. Consider merging them into a nested assignment.
   9 Empty assignment block
  14 Found commented code (page.includeJS.main = fileadmin/js/app.js).
  15 Assignment to value &quot;page.includeJS.main&quot;, altough nested statement for path &quot;page&quot; exists at line 2.
  17 Assignment to value &quot;page.10.templateRootPaths.10&quot;, altough nested statement for path &quot;page&quot; exists at line 2.
  17 Common path prefix &quot;page&quot; with assignment to &quot;page.includeJS.main&quot; in line 15. Consider merging them into a nested assignment.

SUMMARY
12 issues in total. (11 warnings, 1 infos)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Eine vollständige Liste aller vom TypoScript-Linter erkannten Fehler findet sich in der &lt;a href=&quot;https://github.com/martin-helmich/typo3-typoscript-lint#features&quot;&gt;README des Projekts&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;p&gt;Der Typoscript-Linter wird per &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt; installiert. Das funktioniert natürlich am besten, wenn das TYPO3-Projekt, in dem der Linter genutzt werden soll, selbst ebenfalls mit Composer verwaltet wird (zum Setup von TYPO3 mit Composer sei auf die &lt;a href=&quot;https://github.com/TYPO3/TYPO3.CMS.BaseDistribution&quot;&gt;zugehörige README verwiesen&lt;/a&gt;). In diesem Fall reicht ein einfaches &lt;code&gt;composer require --dev&lt;/code&gt; im Projektverzeichnis:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt; composer require --dev helmich/typo3-typoscript-lint
&lt;span class=&quot;go&quot;&gt;Using version ^1.4 for helmich/typo3-typoscript-lint&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;./composer.json has been updated&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Loading composer repositories with package information&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Updating dependencies (including require-dev)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Package operations: 7 installs, 0 updates, 0 removals&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/filesystem (v4.0.3): Downloading (100%)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/config (v4.0.3): Downloading (100%)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing psr/container (1.0.0): Downloading (100%)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/dependency-injection (v4.0.3): Downloading (100%)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing helmich/typo3-typoscript-parser (v1.1.2): Downloading (100%)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/event-dispatcher (v4.0.3): Downloading (100%)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing helmich/typo3-typoscript-lint (v1.4.4): Downloading (100%)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Writing lock file&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Generating autoload files&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Generating  class alias map file&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Inserting class alias loader into main autoload.php file&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Das &lt;code&gt;--dev&lt;/code&gt;-Flag stellt sicher, dass der Linter nicht mit installiert wird, wenn das Projekt auf einem Produktivsystem installiert wird. Der Linter steht im Anschluss im Verzeichnis &lt;code&gt;vendor/bin&lt;/code&gt; zur Verfügung und kann mit &lt;code&gt;vendor/bin/typoscript-lint&lt;/code&gt; aufgerufen werden.&lt;/p&gt;

&lt;p&gt;Falls euer TYPO3-Projekt nicht mit Composer verwaltet wird, kann auch der &lt;code&gt;composer global&lt;/code&gt;-Befehl genutzt werden, um den Linter global zu installieren. In diesem Fall steht der Linter dann nicht im Projektverzeichnis, sondern im Home-Verzeichnis eures Nutzers unter &lt;code&gt;$HOME/.composer/vendor/bin/typoscript-lint&lt;/code&gt; zur Verfügung (wenn ihr das Verzeichnis &lt;code&gt;$HOME/.composer/vendor/bin&lt;/code&gt; in euren Suchpfad eintragt, reicht anschließend auch ein einfaches &lt;code&gt;typoscript-lint&lt;/code&gt; zum Aufruf).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-console&quot; data-lang=&quot;console&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&lt;/span&gt; composer global require helmich/typo3-typoscript-lint
&lt;span class=&quot;go&quot;&gt;Changed current directory to /Users/mhelmich/.composer&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Using version ^1.4 for helmich/typo3-typoscript-lint&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;./composer.json has been created&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Loading composer repositories with package information&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Updating dependencies (including require-dev)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Package operations: 11 installs, 0 updates, 0 removals&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/yaml (v4.0.3): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/filesystem (v4.0.3): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/config (v4.0.3): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing psr/container (1.0.0): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/dependency-injection (v4.0.3): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing helmich/typo3-typoscript-parser (v1.1.2): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/event-dispatcher (v4.0.3): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/finder (v4.0.3): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/polyfill-mbstring (v1.6.0): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing symfony/console (v4.0.3): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  - Installing helmich/typo3-typoscript-lint (v1.4.4): Loading from cache&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Writing lock file&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Generating autoload files&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;nutzung&quot;&gt;Nutzung&lt;/h2&gt;

&lt;p&gt;Nach der Installation kann &lt;code&gt;typoscript-lint&lt;/code&gt; auf beliebige Typoscript-Dateien aufgerufen werden. Die Dateien werden analyisiert, und das Tool wird euch auf Stilfehler (und auch echte Fehler) im Quelltext hinweisen. Die Ausgabe des Tools könnte beispielsweise aussehen wie folgt:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/typoscript-lint-output.png&quot; alt=&quot;Ausgabe von `typoscript-lint`&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mit den Optionen &lt;code&gt;-f xml&lt;/code&gt; und &lt;code&gt;-o ausgabedatei.xml&lt;/code&gt; kann auch eine XML-Ausgabedatei generiert werden, die dem verbreiteten &lt;a href=&quot;http://checkstyle.sourceforge.net/&quot;&gt;Checkstyle-Format&lt;/a&gt; folgt. Auf diese Weise kann der Typoscript-Linter bequem in &lt;em&gt;Continuous Integration&lt;/em&gt;-Umgebungen wie etwa Jenkins integriert werden (für das ein &lt;a href=&quot;https://wiki.jenkins.io/display/JENKINS/Checkstyle+Plugin&quot;&gt;Plugin für Checkstyle&lt;/a&gt; existiert).&lt;/p&gt;

&lt;h2 id=&quot;konfiguration&quot;&gt;Konfiguration&lt;/h2&gt;

&lt;p&gt;Stilfragen in Programmiersprachen ist häufig subjektiv und abhängig von persönlichen Vorlieben. Bestes Beispiel ist wahrscheinlich die &lt;a href=&quot;https://www.youtube.com/watch?v=SsoOG6ZeyUI&quot;&gt;“Tabs oder Spaces?”&lt;/a&gt;-Frage. Natürlich kann der TypoScript-Linter an derartige Präferenzen angepasst werden. Hierzu muss im Projektverzeichnis eine Konfigurationsdatei &lt;code&gt;typoscript-lint.yml&lt;/code&gt; hinterlegt werden (frühere Versionen des Linters benutzten &lt;code&gt;tslint.yml&lt;/code&gt; als Dateiname für die Konfigurationsdatei, was allerdings zu einigen &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;offensichtlichen Konflikten&lt;/a&gt; führte). Hier kann beispielsweise die Einrückung konfiguriert werden (hier etwa für die Einrückung mit Tabs statt Spaces):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt;1 &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;sniffs&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2 &lt;/span&gt;  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;Indentation&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3 &lt;/span&gt;    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;4 &lt;/span&gt;      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;useSpaces&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;5 &lt;/span&gt;      &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;indentPerLevel&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Auch das Deaktivieren einzelner Überprüfungen ist möglich. Wenn euch beispielsweise die Empfehlungen für das Verschachteln von Statements nerven, kann diese Überprüfung einfach deaktiviert werden:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt;1 &lt;/span&gt;&lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;sniffs&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;2 &lt;/span&gt;  &lt;span class=&quot;p p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;NestingConsistency&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;3 &lt;/span&gt;    &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;disabled&lt;/span&gt;&lt;span class=&quot;p p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l l-Scalar l-Scalar-Plain&quot;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;fragen--feedback&quot;&gt;Fragen &amp;amp; Feedback?&lt;/h2&gt;

&lt;p&gt;Der TypoScript-Linter ist &lt;a href=&quot;https://github.com/martin-helmich/typo3-typoscript-lint&quot;&gt;auf GitHub verfügbar&lt;/a&gt; und steht unter der MIT-Lizenz zur Verfügung. Fällt euch bei der Nutzung des Linters ein Fehler auf, nutzt gerne den &lt;a href=&quot;https://github.com/martin-helmich/typo3-typoscript-lint/issues&quot;&gt;Bugtracker auf GitHub&lt;/a&gt;. Auch Verbesserungsvorschläge in Form von Pull Requests sind stets willkommen.&lt;/p&gt;

</description>
        <pubDate>Thu, 18 Jan 2018 20:45:00 +0000</pubDate>
        <link>https://www.martin-helmich.de/de/blog/codequality-typo3.html</link>
        <guid isPermaLink="true">https://www.martin-helmich.de/de/blog/codequality-typo3.html</guid>
        
        <category>typo3</category>
        
        
      </item>
    
      <item>
        <title>NGINX Performance Metrics with Prometheus</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://prometheus.io&quot;&gt;Prometheus&lt;/a&gt; is a combination of monitoring tool and time-series database
that I have come to appreciate highly over the last few months. This article
demonstrates how Prometheus can be used to visualize and monitor various web
server metrics without changing the configuration of the web server itself.&lt;/p&gt;

&lt;p&gt;Metrics are imported into Prometheus by pulling. This means that a monitored
service needs to offer an HTTP endpoint which will be queried by Prometheus in
regular intervals (usually 15 seconds). This endpoint (for example,
&lt;code&gt;http://&amp;lt;service-name&amp;gt;/metrics&lt;/code&gt;) needs to serve a response with the respective
time series data:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http_response_count_total{application=&quot;my-application&quot;} 12423
http_response_time_seconds{application=&quot;my-application&quot;} 1832745
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This works really well in Microservice Architectures – here, every service can
implements its own &lt;code&gt;/metrics&lt;/code&gt; endpoint that produces each and every conceivable
metrics.&lt;/p&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;/h2&gt;

&lt;p&gt;This approach does not work that well when you want to use Prometheus to monitor
performance metrics of (older) web applications served by a traditional LEMP
stack (Linux, NGINX, MySQL, PHP). The reason for this is that a PHP application
typically does not track metrics like the amount of processed requests or the
average request time (or would need to gather this data by itself and then
persist it in a database).&lt;/p&gt;

&lt;p&gt;There are multiple connectors available for integrating NGINX web servers with
Prometheus – however, many of those just process the information available on
the NGINX status page offered by the &lt;code&gt;ngx_http_stub_status_module&lt;/code&gt; module (not
enough detail for my use case), or require you to reconfigure the web server to
send its data to another logging server (much too invasive for my cherished
legacy application).&lt;/p&gt;

&lt;h2 id=&quot;my-solution&quot;&gt;My Solution&lt;/h2&gt;

&lt;p&gt;My solution to this challenge is my own Exporter that can generate performance
metrics from existing NGINX access logs. This exporter is available as
&lt;a href=&quot;https://github.com/martin-helmich/prometheus-nginxlog-exporter&quot;&gt;Open Source on Github&lt;/a&gt;, and exports various metrics based on an
existing &lt;code&gt;access.log&lt;/code&gt; file:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Number of processed requests per HTTP request method and response status&lt;/li&gt;
  &lt;li&gt;The total sum of time needed for processing HTTP requests per HTTP request
method and status (together with the first metrics, this can be used to
compute the average response time)&lt;/li&gt;
  &lt;li&gt;The total sum of the “Upstream Time”, which is the time that NGINX spent on
waiting for PHP-FPM or other FastCGI modules.&lt;/li&gt;
  &lt;li&gt;Various quantiles of the response times and upstream times&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;/h2&gt;

&lt;p&gt;The NGINX exporter is configured using an HCL config file. In this config file,
you can configure multiple “namespaces” – there will then be exported as
separate sets of metrics. Have a look at the following configuration file as an
example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-tf&quot; data-lang=&quot;tf&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot; -Punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;  port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4040&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;  address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;&lt;span class=&quot; -Punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;app1&amp;quot;&lt;/span&gt; &lt;span class=&quot; -Punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;  format&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$remote_addr - $remote_user [$time_local] \&amp;quot;$request\&amp;quot; $status $body_bytes_sent \&amp;quot;$http_referer\&amp;quot; \&amp;quot;$http_user_agent\&amp;quot; \&amp;quot;$http_x_forwarded_for\&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;  source_files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/var/log/nginx/access.log&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;  &lt;span class=&quot;err&quot;&gt;labels&lt;/span&gt; &lt;span class=&quot; -Punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;    app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;my-application&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;    environment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;production&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;    foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bar&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13 &lt;/span&gt;  &lt;span class=&quot; -Punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14 &lt;/span&gt;&lt;span class=&quot; -Punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The exporter starts its own HTTP server that listens on the configured IP
address and port (by default, &lt;code&gt;0.0.0.0:4040&lt;/code&gt;). Using the URL
&lt;code&gt;http://&amp;lt;IP&amp;gt;:4040/metrics&lt;/code&gt;, Prometheus can then scape the respective performance
metrics.&lt;/p&gt;

&lt;p&gt;The namespace name (&lt;code&gt;app1&lt;/code&gt;, in this case) will later be used in the name of the
exported metrics – for example, &lt;code&gt;app1_http_response_time_seconds&lt;/code&gt;. The format
(&lt;code&gt;format&lt;/code&gt;) describes the format in which NGINX writes its access logs (for more
information, refer to &lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_log_module.html#log_format&quot;&gt;the documentation&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&quot;starting-the-exporter&quot;&gt;Starting the Exporter&lt;/h2&gt;

&lt;p&gt;The exporter is a statically compiled Go binary, that you can install
immediately after downloading:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget https://github.com/martin-helmich/prometheus-nginxlog-exporter/releases/download/v1.0.0/prometheus-nginxlog-exporter
./prometheus-nginxlog-exporter -config-file /pfad/zur/config.hcl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To ensure that the exporter starts automatically on system startup, you can
configure a systemd unit (starting at Debian 8, Ubuntu 16.04 or CentOS 7).
Place this file at &lt;code&gt;/etc/systemd/system/prometheus-nginxlog-exporter.service&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;[Unit]&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;NGINX metrics exporter for Prometheus&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;After&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;network-online.target&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;[Service]&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/usr/local/bin/prometheus-nginxlog-exporter -config-file /etc/prometheus-nginxlog-exporter.hcl&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Restart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ProtectSystem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;full&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CapabilityBoundingSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;[Install]&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;multi-user.target&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Note that this unit file expects the executable to be located at
&lt;code&gt;/usr/local/bin/prometheus-nginxlog-exporter&lt;/code&gt; and the configuration file to be
located at &lt;code&gt;/etc/prometheus-nginxlog-exporter.hcl&lt;/code&gt;. Of course, you can adjust
these paths as required.&lt;/p&gt;

&lt;h2 id=&quot;the-result&quot;&gt;The Result&lt;/h2&gt;

&lt;p&gt;I have been operating the &lt;code&gt;prometheus-nginxlog-exporter&lt;/code&gt; in production for some
time,now. Especially together with &lt;a href=&quot;https://grafana.com/&quot;&gt;Grafana&lt;/a&gt;, you can easily create
some excellent reports and monitoring dashboards:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.martin-helmich.de/assets/posts/prometheus-nginx-monitoring.png&quot; alt=&quot;NGINX monitoring in action&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The diagrams in the screenshot above were generated from the following
Prometheus queries:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Average response time: &lt;code&gt;sum(rate(app_http_response_time_seconds_sum[5m])) by (instance) / sum(rate(app_http_response_time_seconds_count[5m])) by (instance)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Requests per second: &lt;code&gt;sum(rate(app_http_response_time_seconds_count[1m])) by (instance)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Response time (90% quantile): &lt;code&gt;app_http_response_time_seconds{quantile=&quot;0.9&quot;,method=&quot;GET&quot;,status=&quot;200&quot;}&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;HTTP traffic: &lt;code&gt;sum(rate(app_http_response_size_bytes[5m])) by (instance)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Status codes per second: &lt;code&gt;sum(rate(app_http_response_count_total[1m])) by (status)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 24 Mar 2017 10:05:00 +0000</pubDate>
        <link>https://www.martin-helmich.de/en/blog/monitoring-nginx.html</link>
        <guid isPermaLink="true">https://www.martin-helmich.de/en/blog/monitoring-nginx.html</guid>
        
        <category>prometheus</category>
        
        <category>nginx</category>
        
        <category>monitoring</category>
        
        
      </item>
    
      <item>
        <title>NGINX-Performancemetriken mit Prometheus</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://prometheus.io&quot;&gt;Prometheus&lt;/a&gt; ist eine Kombination aus Monitoring-Werkzeug und
Zeitreihen-Datenbank, die ich in den letzten Monaten sehr zu schätzen gelernt
habe. Dieser Artikel zeigt, wie Prometheus genutzt werden kann, um verschiedene
Webserver-Metriken (ohne Konfigurationseingriff) in Prometheus nutzbar zu
machen.&lt;/p&gt;

&lt;p&gt;Grundsätzlich werden Metriken nach dem Pull-Prinzip in Prometheus importiert.
Dies bedeutet, dass ein zu überwachender Service einen HTTP-Endpunkt anbieten
muss, der von Prometheus dann in regelmäßigen Intervallen (standardmäßig 15
Sekunden) abgefragt werden kann. Dieser Endpunkt (beispielsweise
&lt;code&gt;http://&amp;lt;service-name&amp;gt;/metrics&lt;/code&gt;) muss dann eine Antwort mit entsprechenden
Zeitreihendaten ausliefern:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http_response_count_total{application=&quot;my-application&quot;} 12423
http_response_time_seconds{application=&quot;my-application&quot;} 1832745
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dies funktioniert ausgezeichnet in Microservice-Architekturen – hier kann jeder
Service einen einzelnen &lt;code&gt;/metrics&lt;/code&gt;-Endpunkt implementieren, der alle denkbaren
Kennzahlen auswirft.&lt;/p&gt;

&lt;h2 id=&quot;das-problem&quot;&gt;Das Problem&lt;/h2&gt;

&lt;p&gt;Nicht so gut funktioniert dieser Ansatz, wenn Prometheus
zur Überwachung von Performance-Metriken einer (älteren) Web-Applikation genutzt
werden soll, die in einem “klassischen” LEMP-Stack (Linux, NGINX, MySQL, PHP)
betrieben wird. Dies liegt daran, dass eine PHP-Applikation üblicherweise nicht
über solche Metriken wie Anzahl der verarbeiteten Requests oder die
durchschnittliche Request-Dauer verfügt (oder sie selbst erheben und dann in
einer Datenbank persistieren müsste).&lt;/p&gt;

&lt;p&gt;Für die Integration von NGINX-Webservern mit Prometheus gibt es bereits mehrere
Konnektoren im Internet – diese werten jedoch entweder nur die Informationen
der NGINX-Statusseite aus, die über das Modul &lt;code&gt;ngx_http_stub_status_module&lt;/code&gt;
angeboten wird (nicht detailliert genug für meinen Anwendungsfall), oder
erfordern eine Umkonfiguration des Webservers, um einen neuen Logging-Server
anzusprechen (zu invasiv für meine gehegte und gepflegte Alt-Applikation).&lt;/p&gt;

&lt;h2 id=&quot;meine-lösung&quot;&gt;Meine Lösung&lt;/h2&gt;

&lt;p&gt;Meine Lösung des Problems besteht nun in einem eigenen Exporter, der
Performance-Metriken aus bestehenden NGINX-Accesslogs generieren kann. Dieser
steht als &lt;a href=&quot;https://github.com/martin-helmich/prometheus-nginxlog-exporter&quot;&gt;Open Source auf Github zur Verfügung&lt;/a&gt;, und stellt einem
Prometheus-Server auf Grundlage einer bestehenden &lt;code&gt;access.log&lt;/code&gt;-Datei diverse
Metriken zur Verfügung:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Anzahl der verarbeiteten Requests pro Request-Methode und Status&lt;/li&gt;
  &lt;li&gt;Summe der für die bisher verarbeiteten Requests notwendige Zeit, pro Methode
und Status (zusammen mit der Anzahl kann hieraus die durchschnittliche
Antwortzeit über den zeitlichen Verlauf ermittelt werden)&lt;/li&gt;
  &lt;li&gt;Summe der “Upstream Time”, also der Zeit, die NGINX damit zugebracht hat, auf
PHP-FPM oder andere FastCGI-Module zu warten&lt;/li&gt;
  &lt;li&gt;Diverse Quantile der Antwortzeit und Upstream Time&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;konfiguration&quot;&gt;Konfiguration&lt;/h2&gt;

&lt;p&gt;Der NGINX-Exporter wird über eine HCL-Konfigurationsdatei konfiguriert. In der
Konfigurationsdatei können mehrere “Namespaces” konfiguriert werden – diese
werden dann als separate Metriken exportiert. Nachfolgend ein kurzes Beispiel
für eine solche Konfigurationsdatei:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-tf&quot; data-lang=&quot;tf&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot; -Punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;  port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4040&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;  address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;0.0.0.0&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;&lt;span class=&quot; -Punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;app1&amp;quot;&lt;/span&gt; &lt;span class=&quot; -Punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;  format&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$remote_addr - $remote_user [$time_local] \&amp;quot;$request\&amp;quot; $status $body_bytes_sent \&amp;quot;$http_referer\&amp;quot; \&amp;quot;$http_user_agent\&amp;quot; \&amp;quot;$http_x_forwarded_for\&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;  source_files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/var/log/nginx/access.log&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;  &lt;span class=&quot;err&quot;&gt;labels&lt;/span&gt; &lt;span class=&quot; -Punctuation&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;    app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;my-application&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;    environment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;production&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;    foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bar&amp;quot;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13 &lt;/span&gt;  &lt;span class=&quot; -Punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14 &lt;/span&gt;&lt;span class=&quot; -Punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Beim Start des Exporters startet dieser einen eigenen HTTP-Server, der auf der
konfigurierten IP-Adresse und Port lauscht (standardmäßig &lt;code&gt;0.0.0.0:4040&lt;/code&gt;). Über
die URL &lt;code&gt;http://&amp;lt;IP&amp;gt;:4040/metrics&lt;/code&gt; können dann von Prometheus die entsprechenden
Performance-Metriken abgegriffen werden.&lt;/p&gt;

&lt;p&gt;Der Namespace-Name (hier &lt;code&gt;app1&lt;/code&gt;) wird später in den Namen der exportierten
Metriken übernommen – also beispielsweise &lt;code&gt;app1_http_response_time_seconds&lt;/code&gt;.
Das Format (&lt;code&gt;format&lt;/code&gt;) gibt das Format an, in dem NGINX die Access-Logs schreibt
(für mehr Informationen dazu sei &lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_log_module.html#log_format&quot;&gt;auf die Dokumentation&lt;/a&gt; verwiesen).&lt;/p&gt;

&lt;h2 id=&quot;start-des-exporters&quot;&gt;Start des Exporters&lt;/h2&gt;

&lt;p&gt;Der eigentliche Exporter ist ein statisch kompiliertes Go-Binary, welches nach
dem Herunterladen sofort installiert werden kann:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget https://github.com/martin-helmich/prometheus-nginxlog-exporter/releases/download/v1.0.0/prometheus-nginxlog-exporter
./prometheus-nginxlog-exporter -config-file /pfad/zur/config.hcl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Um sicherzustellen, dass der Exporter beim Systemstart automatisch startet,
kann eine entsprechende systemd-Unit konfiguriert werden (ab Debian 8, Ubuntu
16.04 oder CentOS 7). Diese kann platziert werden unter &lt;code&gt;/etc/systemd/system/prometheus-nginxlog-exporter.service&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;lineno&quot;&gt; 1 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;[Unit]&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;NGINX metrics exporter for Prometheus&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;After&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;network-online.target&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;[Service]&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ExecStart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/usr/local/bin/prometheus-nginxlog-exporter -config-file /etc/prometheus-nginxlog-exporter.hcl&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Restart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ProtectSystem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;full&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;CapabilityBoundingSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10 &lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11 &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;[Install]&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12 &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;WantedBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;multi-user.target&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Beachtet, dass diese Unitfile davon ausgeht, dass das Binary unter
&lt;code&gt;/usr/local/bin/prometheus-nginxlog-exporter&lt;/code&gt; und die Konfigurationsdatei unter
&lt;code&gt;/etc/prometheus-nginxlog-exporter.hcl&lt;/code&gt; liegt. Diese Pfade können natürlich nach
Bedarf angepasst werden.&lt;/p&gt;

&lt;h2 id=&quot;das-ergebnis&quot;&gt;Das Ergebnis&lt;/h2&gt;

&lt;p&gt;Ich betreibe den &lt;code&gt;prometheus-nginxlog-exporter&lt;/code&gt; nun seit einiger Zeit schon
produktiv. Insbesondere zusammen mit &lt;a href=&quot;https://grafana.com/&quot;&gt;Grafana&lt;/a&gt; lassen sich wunderbare
Auswertungen und Monitoring-Dashboards erstellen:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://www.martin-helmich.de/assets/posts/prometheus-nginx-monitoring.png&quot; alt=&quot;NGINX-Monitoring in Aktion&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Die Diagramme im obigen Screenshot wurden aus den folgenden Prometheus-Queries
generiert:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Durchschnittliche Antwortzeit: &lt;code&gt;sum(rate(app_http_response_time_seconds_sum[5m])) by (instance) / sum(rate(app_http_response_time_seconds_count[5m])) by (instance)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Anfragen pro Sekunde: &lt;code&gt;sum(rate(app_http_response_time_seconds_count[1m])) by (instance)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Antwortzeit (90%-Quantil): &lt;code&gt;app_http_response_time_seconds{quantile=&quot;0.9&quot;,method=&quot;GET&quot;,status=&quot;200&quot;}&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;HTTP-Traffic: &lt;code&gt;sum(rate(app_http_response_size_bytes[5m])) by (instance)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Statuscodes pro Sekunde: &lt;code&gt;sum(rate(app_http_response_count_total[1m])) by (status)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 24 Mar 2017 10:05:00 +0000</pubDate>
        <link>https://www.martin-helmich.de/de/blog/monitoring-nginx.html</link>
        <guid isPermaLink="true">https://www.martin-helmich.de/de/blog/monitoring-nginx.html</guid>
        
        <category>prometheus</category>
        
        <category>nginx</category>
        
        <category>monitoring</category>
        
        
      </item>
    
  </channel>
</rss>
